{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Collider = void 0;\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Collider = /*#__PURE__*/function () {\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n\n    this.container = container;\n  }\n\n  _createClass(Collider, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.particlesOptions.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact(p1) {\n      var container = this.container;\n      var pos1 = p1.getPosition();\n      var query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n\n          if (p1 === p2 || !p2.particlesOptions.collisions.enable || p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode || p2.destroyed || p2.spawning) {\n            continue;\n          }\n\n          var pos2 = p2.getPosition();\n          var dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n          var radius1 = p1.getRadius();\n          var radius2 = p2.getRadius();\n          var distP = radius1 + radius2;\n\n          if (dist <= distP) {\n            this.resolveCollision(p1, p2);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"resolveCollision\",\n    value: function resolveCollision(p1, p2) {\n      switch (p1.particlesOptions.collisions.mode) {\n        case Enums_1.CollisionMode.absorb:\n          {\n            this.absorb(p1, p2);\n            break;\n          }\n\n        case Enums_1.CollisionMode.bounce:\n          {\n            Collider.bounce(p1, p2);\n            break;\n          }\n\n        case Enums_1.CollisionMode.destroy:\n          {\n            Collider.destroy(p1, p2);\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"absorb\",\n    value: function absorb(p1, p2) {\n      var container = this.container;\n      var fps = container.options.fpsLimit / 1000;\n\n      if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n          var factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n          p1.size.value += factor;\n          p2.size.value -= factor;\n\n          if (p2.getRadius() <= container.retina.pixelRatio) {\n            p2.size.value = 0;\n            p2.destroy();\n          }\n        } else {\n          var _factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n\n          p1.size.value -= _factor;\n          p2.size.value += _factor;\n\n          if (p1.getRadius() <= container.retina.pixelRatio) {\n            p1.size.value = 0;\n            p1.destroy();\n          }\n        }\n      }\n    }\n  }], [{\n    key: \"bounce\",\n    value: function bounce(p1, p2) {\n      Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(p1, p2) {\n      if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n      } else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n          p2.destroy();\n        } else {\n          p1.destroy();\n        }\n      }\n    }\n  }]);\n\n  return Collider;\n}();\n\nexports.Collider = Collider;","map":{"version":3,"sources":["/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/tsparticles/dist/Interactions/Particles/Collider.js"],"names":["Object","defineProperty","exports","value","Collider","Enums_1","require","Utils_1","container","particle","particlesOptions","collisions","enable","p1","pos1","getPosition","query","particles","quadTree","queryCircle","getRadius","p2","mode","destroyed","spawning","pos2","dist","NumberUtils","getDistance","radius1","radius2","distP","resolveCollision","CollisionMode","absorb","bounce","destroy","fps","options","fpsLimit","undefined","factor","clamp","size","retina","pixelRatio","Utils","circleBounce","circleBounceDataFromParticle"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    static bounce(p1, p2) {\n        Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n    }\n    static destroy(p1, p2) {\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                p2.destroy();\n            }\n            else {\n                p1.destroy();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return particle.particlesOptions.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.particlesOptions.collisions.enable ||\n                p1.particlesOptions.collisions.mode !== p2.particlesOptions.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            const radius1 = p1.getRadius();\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.particlesOptions.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                Collider.bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                Collider.destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.options.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"]},"metadata":{},"sourceType":"script"}