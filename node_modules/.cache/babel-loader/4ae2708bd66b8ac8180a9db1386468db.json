{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorUtils = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Constants_1 = require(\"./Constants\");\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nclass ColorUtils {\n  static colorToRgb(input, index, useIndex = true) {\n    var _a, _b, _c;\n\n    if (input === undefined) {\n      return;\n    }\n\n    const color = typeof input === \"string\" ? {\n      value: input\n    } : input;\n    let res;\n\n    if (typeof color.value === \"string\") {\n      if (color.value === Constants_1.Constants.randomColorValue) {\n        res = ColorUtils.getRandomRgbColor();\n      } else {\n        res = ColorUtils.stringToRgb(color.value);\n      }\n    } else {\n      if (color.value instanceof Array) {\n        const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n        res = ColorUtils.colorToRgb({\n          value: colorSelected\n        });\n      } else {\n        const colorValue = color.value;\n        const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n\n        if (rgbColor.r !== undefined) {\n          res = rgbColor;\n        } else {\n          const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n\n          if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            res = ColorUtils.hslToRgb(hslColor);\n          } else {\n            const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n\n            if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n              res = ColorUtils.hsvToRgb(hsvColor);\n            }\n          }\n        }\n      }\n    }\n\n    return res;\n  }\n\n  static colorToHsl(color, index, useIndex = true) {\n    const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n    return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n  }\n\n  static rgbToHsl(color) {\n    const r1 = color.r / 255;\n    const g1 = color.g / 255;\n    const b1 = color.b / 255;\n    const max = Math.max(r1, g1, b1);\n    const min = Math.min(r1, g1, b1);\n    const res = {\n      h: 0,\n      l: (max + min) / 2,\n      s: 0\n    };\n\n    if (max != min) {\n      res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n      res.h = r1 === max ? (g1 - b1) / (max - min) : res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min);\n    }\n\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n\n    if (res.h < 0) {\n      res.h += 360;\n    }\n\n    return res;\n  }\n\n  static stringToAlpha(input) {\n    var _a;\n\n    return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n  }\n\n  static stringToRgb(input) {\n    return ColorUtils.stringToRgba(input);\n  }\n\n  static hslToRgb(hsl) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hslPercent = {\n      h: hsl.h / 360,\n      l: hsl.l / 100,\n      s: hsl.s / 100\n    };\n\n    if (hslPercent.s === 0) {\n      result.b = hslPercent.l;\n      result.g = hslPercent.l;\n      result.r = hslPercent.l;\n    } else {\n      const q = hslPercent.l < 0.5 ? hslPercent.l * (1 + hslPercent.s) : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n      const p = 2 * hslPercent.l - q;\n      result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n      result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n      result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n  }\n\n  static hslaToRgba(hsla) {\n    const rgbResult = ColorUtils.hslToRgb(hsla);\n    return {\n      a: hsla.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n\n  static hslToHsv(hsl) {\n    const l = hsl.l / 100,\n          sl = hsl.s / 100;\n    const v = l + sl * Math.min(l, 1 - l),\n          sv = !v ? 0 : 2 * (1 - l / v);\n    return {\n      h: hsl.h,\n      s: sv * 100,\n      v: v * 100\n    };\n  }\n\n  static hslaToHsva(hsla) {\n    const hsvResult = ColorUtils.hslToHsv(hsla);\n    return {\n      a: hsla.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n\n  static hsvToHsl(hsv) {\n    const v = hsv.v / 100,\n          sv = hsv.s / 100;\n    const l = v * (1 - sv / 2),\n          sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n    return {\n      h: hsv.h,\n      l: l * 100,\n      s: sl * 100\n    };\n  }\n\n  static hsvaToHsla(hsva) {\n    const hslResult = ColorUtils.hsvToHsl(hsva);\n    return {\n      a: hsva.a,\n      h: hslResult.h,\n      l: hslResult.l,\n      s: hslResult.s\n    };\n  }\n\n  static hsvToRgb(hsv) {\n    const result = {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    const hsvPercent = {\n      h: hsv.h / 60,\n      s: hsv.s / 100,\n      v: hsv.v / 100\n    };\n    const c = hsvPercent.v * hsvPercent.s,\n          x = c * (1 - Math.abs(hsvPercent.h % 2 - 1));\n    let tempRgb;\n\n    if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n      tempRgb = {\n        r: c,\n        g: x,\n        b: 0\n      };\n    } else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n      tempRgb = {\n        r: x,\n        g: c,\n        b: 0\n      };\n    } else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n      tempRgb = {\n        r: 0,\n        g: c,\n        b: x\n      };\n    } else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n      tempRgb = {\n        r: 0,\n        g: x,\n        b: c\n      };\n    } else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n      tempRgb = {\n        r: x,\n        g: 0,\n        b: c\n      };\n    } else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n      tempRgb = {\n        r: c,\n        g: 0,\n        b: x\n      };\n    }\n\n    if (tempRgb) {\n      const m = hsvPercent.v - c;\n      result.r = Math.floor((tempRgb.r + m) * 255);\n      result.g = Math.floor((tempRgb.g + m) * 255);\n      result.b = Math.floor((tempRgb.b + m) * 255);\n    }\n\n    return result;\n  }\n\n  static hsvaToRgba(hsva) {\n    const rgbResult = ColorUtils.hsvToRgb(hsva);\n    return {\n      a: hsva.a,\n      b: rgbResult.b,\n      g: rgbResult.g,\n      r: rgbResult.r\n    };\n  }\n\n  static rgbToHsv(rgb) {\n    const rgbPercent = {\n      r: rgb.r / 255,\n      g: rgb.g / 255,\n      b: rgb.b / 255\n    },\n          xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b),\n          v = xMax,\n          c = xMax - xMin;\n    let h = 0;\n\n    if (v === rgbPercent.r) {\n      h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n    } else if (v === rgbPercent.g) {\n      h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n    } else if (v === rgbPercent.b) {\n      h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n    }\n\n    const s = !v ? 0 : c / v;\n    return {\n      h,\n      s: s * 100,\n      v: v * 100\n    };\n  }\n\n  static rgbaToHsva(rgba) {\n    const hsvResult = ColorUtils.rgbToHsv(rgba);\n    return {\n      a: rgba.a,\n      h: hsvResult.h,\n      s: hsvResult.s,\n      v: hsvResult.v\n    };\n  }\n\n  static getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n      b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n      g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n      r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256))\n    };\n  }\n\n  static getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n\n  static getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n  }\n\n  static getStyleFromHsv(color, opacity) {\n    return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n  }\n\n  static mix(color1, color2, size1, size2) {\n    let rgb1 = color1;\n    let rgb2 = color2;\n\n    if (rgb1.r === undefined) {\n      rgb1 = ColorUtils.hslToRgb(color1);\n    }\n\n    if (rgb2.r === undefined) {\n      rgb2 = ColorUtils.hslToRgb(color2);\n    }\n\n    return {\n      b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n      g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n      r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2)\n    };\n  }\n\n  static replaceColorSvg(image, color, opacity) {\n    if (!image.svgData) {\n      return \"\";\n    }\n\n    const svgXml = image.svgData;\n    const rgbHex = /#([0-9A-F]{3,6})/gi;\n    return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n  }\n\n  static getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n\n    if (linkColor === Constants_1.Constants.randomColorValue) {\n      return ColorUtils.getRandomRgbColor();\n    } else if (linkColor === \"mid\") {\n      const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n      const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n\n      if (sourceColor && destColor && p2) {\n        return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n      } else {\n        const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n\n        if (hslColor) {\n          return ColorUtils.hslToRgb(hslColor);\n        }\n      }\n    } else {\n      return linkColor;\n    }\n  }\n\n  static getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n\n    if (color === Constants_1.Constants.randomColorValue) {\n      if (consent) {\n        return ColorUtils.colorToRgb({\n          value: color\n        });\n      } else if (blink) {\n        return Constants_1.Constants.randomColorValue;\n      } else {\n        return Constants_1.Constants.midColorValue;\n      }\n    } else {\n      return ColorUtils.colorToRgb({\n        value: color\n      });\n    }\n  }\n\n  static hue2rgb(p, q, t) {\n    let tCalc = t;\n\n    if (tCalc < 0) {\n      tCalc += 1;\n    }\n\n    if (tCalc > 1) {\n      tCalc -= 1;\n    }\n\n    if (tCalc < 1 / 6) {\n      return p + (q - p) * 6 * tCalc;\n    }\n\n    if (tCalc < 1 / 2) {\n      return q;\n    }\n\n    if (tCalc < 2 / 3) {\n      return p + (q - p) * (2 / 3 - tCalc) * 6;\n    }\n\n    return p;\n  }\n\n  static stringToRgba(input) {\n    if (input.startsWith(\"rgb\")) {\n      const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? {\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        b: parseInt(result[3], 10),\n        g: parseInt(result[2], 10),\n        r: parseInt(result[1], 10)\n      } : undefined;\n    } else if (input.startsWith(\"hsl\")) {\n      const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? ColorUtils.hslaToRgba({\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        h: parseInt(result[1], 10),\n        l: parseInt(result[3], 10),\n        s: parseInt(result[2], 10)\n      }) : undefined;\n    } else if (input.startsWith(\"hsv\")) {\n      const regex = /hsva?\\(\\s*(\\d+)°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n      const result = regex.exec(input);\n      return result ? ColorUtils.hsvaToRgba({\n        a: result.length > 4 ? parseFloat(result[5]) : 1,\n        h: parseInt(result[1], 10),\n        s: parseInt(result[2], 10),\n        v: parseInt(result[3], 10)\n      }) : undefined;\n    } else {\n      const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n      const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n      });\n      const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n      const result = regex.exec(hexFixed);\n      return result ? {\n        a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n        b: parseInt(result[3], 16),\n        g: parseInt(result[2], 16),\n        r: parseInt(result[1], 16)\n      } : undefined;\n    }\n  }\n\n}\n\nexports.ColorUtils = ColorUtils;","map":{"version":3,"sources":["/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/tsparticles/dist/Utils/ColorUtils.js"],"names":["Object","defineProperty","exports","value","ColorUtils","Utils_1","require","Constants_1","NumberUtils_1","colorToRgb","input","index","useIndex","_a","_b","_c","undefined","color","res","Constants","randomColorValue","getRandomRgbColor","stringToRgb","Array","colorSelected","Utils","itemFromArray","colorValue","rgbColor","rgb","r","hslColor","hsl","h","l","hslToRgb","hsvColor","hsv","v","hsvToRgb","colorToHsl","rgbToHsl","r1","g1","g","b1","b","max","Math","min","s","stringToAlpha","stringToRgba","a","result","hslPercent","q","p","hue2rgb","floor","hslaToRgba","hsla","rgbResult","hslToHsv","sl","sv","hslaToHsva","hsvResult","hsvToHsl","hsvaToHsla","hsva","hslResult","hsvPercent","c","x","abs","tempRgb","m","hsvaToRgba","rgbToHsv","rgbPercent","xMax","xMin","rgbaToHsva","rgba","fixedMin","NumberUtils","randomInRange","getStyleFromRgb","opacity","getStyleFromHsl","getStyleFromHsv","mix","color1","color2","size1","size2","rgb1","rgb2","replaceColorSvg","image","svgData","svgXml","rgbHex","replace","getLinkColor","p1","p2","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","getLinkRandomColor","optColor","blink","consent","midColorValue","t","tCalc","startsWith","regex","exec","length","parseFloat","parseInt","shorthandRegex","hexFixed","_m"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ColorUtils = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Constants_1 = require(\"./Constants\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nclass ColorUtils {\n    static colorToRgb(input, index, useIndex = true) {\n        var _a, _b, _c;\n        if (input === undefined) {\n            return;\n        }\n        const color = typeof input === \"string\" ? { value: input } : input;\n        let res;\n        if (typeof color.value === \"string\") {\n            if (color.value === Constants_1.Constants.randomColorValue) {\n                res = ColorUtils.getRandomRgbColor();\n            }\n            else {\n                res = ColorUtils.stringToRgb(color.value);\n            }\n        }\n        else {\n            if (color.value instanceof Array) {\n                const colorSelected = Utils_1.Utils.itemFromArray(color.value, index, useIndex);\n                res = ColorUtils.colorToRgb({ value: colorSelected });\n            }\n            else {\n                const colorValue = color.value;\n                const rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n                if (rgbColor.r !== undefined) {\n                    res = rgbColor;\n                }\n                else {\n                    const hslColor = (_b = colorValue.hsl) !== null && _b !== void 0 ? _b : color.value;\n                    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n                        res = ColorUtils.hslToRgb(hslColor);\n                    }\n                    else {\n                        const hsvColor = (_c = colorValue.hsv) !== null && _c !== void 0 ? _c : color.value;\n                        if (hsvColor.h !== undefined && hsvColor.v !== undefined) {\n                            res = ColorUtils.hsvToRgb(hsvColor);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    static colorToHsl(color, index, useIndex = true) {\n        const rgb = ColorUtils.colorToRgb(color, index, useIndex);\n        return rgb !== undefined ? ColorUtils.rgbToHsl(rgb) : undefined;\n    }\n    static rgbToHsl(color) {\n        const r1 = color.r / 255;\n        const g1 = color.g / 255;\n        const b1 = color.b / 255;\n        const max = Math.max(r1, g1, b1);\n        const min = Math.min(r1, g1, b1);\n        const res = {\n            h: 0,\n            l: (max + min) / 2,\n            s: 0,\n        };\n        if (max != min) {\n            res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n            res.h =\n                r1 === max\n                    ? (g1 - b1) / (max - min)\n                    : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n        }\n        res.l *= 100;\n        res.s *= 100;\n        res.h *= 60;\n        if (res.h < 0) {\n            res.h += 360;\n        }\n        return res;\n    }\n    static stringToAlpha(input) {\n        var _a;\n        return (_a = ColorUtils.stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n    }\n    static stringToRgb(input) {\n        return ColorUtils.stringToRgba(input);\n    }\n    static hslToRgb(hsl) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hslPercent = {\n            h: hsl.h / 360,\n            l: hsl.l / 100,\n            s: hsl.s / 100,\n        };\n        if (hslPercent.s === 0) {\n            result.b = hslPercent.l;\n            result.g = hslPercent.l;\n            result.r = hslPercent.l;\n        }\n        else {\n            const q = hslPercent.l < 0.5\n                ? hslPercent.l * (1 + hslPercent.s)\n                : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s;\n            const p = 2 * hslPercent.l - q;\n            result.r = ColorUtils.hue2rgb(p, q, hslPercent.h + 1 / 3);\n            result.g = ColorUtils.hue2rgb(p, q, hslPercent.h);\n            result.b = ColorUtils.hue2rgb(p, q, hslPercent.h - 1 / 3);\n        }\n        result.r = Math.floor(result.r * 255);\n        result.g = Math.floor(result.g * 255);\n        result.b = Math.floor(result.b * 255);\n        return result;\n    }\n    static hslaToRgba(hsla) {\n        const rgbResult = ColorUtils.hslToRgb(hsla);\n        return {\n            a: hsla.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static hslToHsv(hsl) {\n        const l = hsl.l / 100, sl = hsl.s / 100;\n        const v = l + sl * Math.min(l, 1 - l), sv = !v ? 0 : 2 * (1 - l / v);\n        return {\n            h: hsl.h,\n            s: sv * 100,\n            v: v * 100,\n        };\n    }\n    static hslaToHsva(hsla) {\n        const hsvResult = ColorUtils.hslToHsv(hsla);\n        return {\n            a: hsla.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static hsvToHsl(hsv) {\n        const v = hsv.v / 100, sv = hsv.s / 100;\n        const l = v * (1 - sv / 2), sl = l === 0 || l === 1 ? 0 : (v - l) / Math.min(l, 1 - l);\n        return {\n            h: hsv.h,\n            l: l * 100,\n            s: sl * 100,\n        };\n    }\n    static hsvaToHsla(hsva) {\n        const hslResult = ColorUtils.hsvToHsl(hsva);\n        return {\n            a: hsva.a,\n            h: hslResult.h,\n            l: hslResult.l,\n            s: hslResult.s,\n        };\n    }\n    static hsvToRgb(hsv) {\n        const result = { b: 0, g: 0, r: 0 };\n        const hsvPercent = {\n            h: hsv.h / 60,\n            s: hsv.s / 100,\n            v: hsv.v / 100,\n        };\n        const c = hsvPercent.v * hsvPercent.s, x = c * (1 - Math.abs((hsvPercent.h % 2) - 1));\n        let tempRgb;\n        if (hsvPercent.h >= 0 && hsvPercent.h <= 1) {\n            tempRgb = {\n                r: c,\n                g: x,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 1 && hsvPercent.h <= 2) {\n            tempRgb = {\n                r: x,\n                g: c,\n                b: 0,\n            };\n        }\n        else if (hsvPercent.h > 2 && hsvPercent.h <= 3) {\n            tempRgb = {\n                r: 0,\n                g: c,\n                b: x,\n            };\n        }\n        else if (hsvPercent.h > 3 && hsvPercent.h <= 4) {\n            tempRgb = {\n                r: 0,\n                g: x,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 4 && hsvPercent.h <= 5) {\n            tempRgb = {\n                r: x,\n                g: 0,\n                b: c,\n            };\n        }\n        else if (hsvPercent.h > 5 && hsvPercent.h <= 6) {\n            tempRgb = {\n                r: c,\n                g: 0,\n                b: x,\n            };\n        }\n        if (tempRgb) {\n            const m = hsvPercent.v - c;\n            result.r = Math.floor((tempRgb.r + m) * 255);\n            result.g = Math.floor((tempRgb.g + m) * 255);\n            result.b = Math.floor((tempRgb.b + m) * 255);\n        }\n        return result;\n    }\n    static hsvaToRgba(hsva) {\n        const rgbResult = ColorUtils.hsvToRgb(hsva);\n        return {\n            a: hsva.a,\n            b: rgbResult.b,\n            g: rgbResult.g,\n            r: rgbResult.r,\n        };\n    }\n    static rgbToHsv(rgb) {\n        const rgbPercent = {\n            r: rgb.r / 255,\n            g: rgb.g / 255,\n            b: rgb.b / 255,\n        }, xMax = Math.max(rgbPercent.r, rgbPercent.g, rgbPercent.b), xMin = Math.min(rgbPercent.r, rgbPercent.g, rgbPercent.b), v = xMax, c = xMax - xMin;\n        let h = 0;\n        if (v === rgbPercent.r) {\n            h = 60 * ((rgbPercent.g - rgbPercent.b) / c);\n        }\n        else if (v === rgbPercent.g) {\n            h = 60 * (2 + (rgbPercent.b - rgbPercent.r) / c);\n        }\n        else if (v === rgbPercent.b) {\n            h = 60 * (4 + (rgbPercent.r - rgbPercent.g) / c);\n        }\n        const s = !v ? 0 : c / v;\n        return {\n            h,\n            s: s * 100,\n            v: v * 100,\n        };\n    }\n    static rgbaToHsva(rgba) {\n        const hsvResult = ColorUtils.rgbToHsv(rgba);\n        return {\n            a: rgba.a,\n            h: hsvResult.h,\n            s: hsvResult.s,\n            v: hsvResult.v,\n        };\n    }\n    static getRandomRgbColor(min) {\n        const fixedMin = min !== null && min !== void 0 ? min : 0;\n        return {\n            b: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n            g: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n            r: Math.floor(NumberUtils_1.NumberUtils.randomInRange(fixedMin, 256)),\n        };\n    }\n    static getStyleFromRgb(color, opacity) {\n        return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsl(color, opacity) {\n        return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n    }\n    static getStyleFromHsv(color, opacity) {\n        return ColorUtils.getStyleFromHsl(ColorUtils.hsvToHsl(color), opacity);\n    }\n    static mix(color1, color2, size1, size2) {\n        let rgb1 = color1;\n        let rgb2 = color2;\n        if (rgb1.r === undefined) {\n            rgb1 = ColorUtils.hslToRgb(color1);\n        }\n        if (rgb2.r === undefined) {\n            rgb2 = ColorUtils.hslToRgb(color2);\n        }\n        return {\n            b: NumberUtils_1.NumberUtils.mix(rgb1.b, rgb2.b, size1, size2),\n            g: NumberUtils_1.NumberUtils.mix(rgb1.g, rgb2.g, size1, size2),\n            r: NumberUtils_1.NumberUtils.mix(rgb1.r, rgb2.r, size1, size2),\n        };\n    }\n    static replaceColorSvg(image, color, opacity) {\n        if (!image.svgData) {\n            return \"\";\n        }\n        const svgXml = image.svgData;\n        const rgbHex = /#([0-9A-F]{3,6})/gi;\n        return svgXml.replace(rgbHex, () => ColorUtils.getStyleFromHsl(color, opacity));\n    }\n    static getLinkColor(p1, p2, linkColor) {\n        var _a, _b;\n        if (linkColor === Constants_1.Constants.randomColorValue) {\n            return ColorUtils.getRandomRgbColor();\n        }\n        else if (linkColor === \"mid\") {\n            const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor();\n            const destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n            if (sourceColor && destColor && p2) {\n                return ColorUtils.mix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n            }\n            else {\n                const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n                if (hslColor) {\n                    return ColorUtils.hslToRgb(hslColor);\n                }\n            }\n        }\n        else {\n            return linkColor;\n        }\n    }\n    static getLinkRandomColor(optColor, blink, consent) {\n        const color = typeof optColor === \"string\" ? optColor : optColor.value;\n        if (color === Constants_1.Constants.randomColorValue) {\n            if (consent) {\n                return ColorUtils.colorToRgb({\n                    value: color,\n                });\n            }\n            else if (blink) {\n                return Constants_1.Constants.randomColorValue;\n            }\n            else {\n                return Constants_1.Constants.midColorValue;\n            }\n        }\n        else {\n            return ColorUtils.colorToRgb({\n                value: color,\n            });\n        }\n    }\n    static hue2rgb(p, q, t) {\n        let tCalc = t;\n        if (tCalc < 0) {\n            tCalc += 1;\n        }\n        if (tCalc > 1) {\n            tCalc -= 1;\n        }\n        if (tCalc < 1 / 6) {\n            return p + (q - p) * 6 * tCalc;\n        }\n        if (tCalc < 1 / 2) {\n            return q;\n        }\n        if (tCalc < 2 / 3) {\n            return p + (q - p) * (2 / 3 - tCalc) * 6;\n        }\n        return p;\n    }\n    static stringToRgba(input) {\n        if (input.startsWith(\"rgb\")) {\n            const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? {\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    b: parseInt(result[3], 10),\n                    g: parseInt(result[2], 10),\n                    r: parseInt(result[1], 10),\n                }\n                : undefined;\n        }\n        else if (input.startsWith(\"hsl\")) {\n            const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hslaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    l: parseInt(result[3], 10),\n                    s: parseInt(result[2], 10),\n                })\n                : undefined;\n        }\n        else if (input.startsWith(\"hsv\")) {\n            const regex = /hsva?\\(\\s*(\\d+)°\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.]+)\\s*)?\\)/i;\n            const result = regex.exec(input);\n            return result\n                ? ColorUtils.hsvaToRgba({\n                    a: result.length > 4 ? parseFloat(result[5]) : 1,\n                    h: parseInt(result[1], 10),\n                    s: parseInt(result[2], 10),\n                    v: parseInt(result[3], 10),\n                })\n                : undefined;\n        }\n        else {\n            const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n            const hexFixed = input.replace(shorthandRegex, (_m, r, g, b, a) => {\n                return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n            });\n            const regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i;\n            const result = regex.exec(hexFixed);\n            return result\n                ? {\n                    a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n                    b: parseInt(result[3], 16),\n                    g: parseInt(result[2], 16),\n                    r: parseInt(result[1], 16),\n                }\n                : undefined;\n        }\n    }\n}\nexports.ColorUtils = ColorUtils;\n"]},"metadata":{},"sourceType":"script"}