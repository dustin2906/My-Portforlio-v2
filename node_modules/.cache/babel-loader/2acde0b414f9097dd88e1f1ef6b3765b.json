{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particle = void 0;\n\nvar Updater_1 = require(\"./Particle/Updater\");\n\nvar Particles_1 = require(\"../Options/Classes/Particles/Particles\");\n\nvar Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Infecter_1 = require(\"./Particle/Infecter\");\n\nvar Mover_1 = require(\"./Particle/Mover\");\n\nvar Particle = /*#__PURE__*/function () {\n  function Particle(id, container, position, overrideOptions) {\n    _classCallCheck(this, Particle);\n\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    this.id = id;\n    this.container = container;\n    this.links = [];\n    this.fill = true;\n    this.close = true;\n    this.lastNoiseTime = 0;\n    this.destroyed = false;\n    this.misplaced = false;\n    var pxRatio = container.retina.pixelRatio;\n    var options = container.options;\n    var particlesOptions = new Particles_1.Particles();\n    particlesOptions.load(options.particles);\n    var shapeType = particlesOptions.shape.type;\n    var reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = overrideShapeType instanceof Array ? Utils_1.Utils.itemFromArray(overrideShapeType, this.id, reduceDuplicates) : overrideShapeType;\n      }\n\n      var shapeOptions = new Shape_1.Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        var shapeData = shapeOptions.options[this.shape];\n\n        if (shapeData) {\n          this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n        }\n      }\n    } else {\n      var _shapeData = particlesOptions.shape.options[this.shape];\n\n      if (_shapeData) {\n        this.shapeData = Utils_1.Utils.deepExtend({}, _shapeData instanceof Array ? Utils_1.Utils.itemFromArray(_shapeData, this.id, reduceDuplicates) : _shapeData);\n      }\n    }\n\n    if (overrideOptions !== undefined) {\n      particlesOptions.load(overrideOptions);\n    }\n\n    if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n      particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n    }\n\n    this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n    this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n    this.particlesOptions = particlesOptions;\n    this.noiseDelay = Utils_1.NumberUtils.getValue(this.particlesOptions.move.noise.delay) * 1000;\n    container.retina.initParticle(this);\n    var color = this.particlesOptions.color;\n    var sizeOptions = this.particlesOptions.size;\n    var sizeValue = Utils_1.NumberUtils.getValue(sizeOptions) * container.retina.pixelRatio;\n    var randomSize = typeof sizeOptions.random === \"boolean\" ? sizeOptions.random : sizeOptions.random.enable;\n    this.size = {\n      value: sizeValue\n    };\n    this.direction = this.particlesOptions.move.direction;\n    this.bubble = {\n      inRange: false\n    };\n    this.initialVelocity = this.calculateVelocity();\n    this.velocity = {\n      horizontal: this.initialVelocity.horizontal,\n      vertical: this.initialVelocity.vertical\n    };\n    this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n    var rotateOptions = this.particlesOptions.rotate;\n    this.rotate = {\n      value: (rotateOptions.random.enable ? Math.random() * 360 : rotateOptions.value) * Math.PI / 180\n    };\n    var rotateDirection = rotateOptions.direction;\n\n    if (rotateDirection === Enums_1.RotateDirection.random) {\n      var index = Math.floor(Math.random() * 2);\n      rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n    }\n\n    switch (rotateDirection) {\n      case Enums_1.RotateDirection.counterClockwise:\n      case \"counterClockwise\":\n        this.rotate.status = Enums_1.AnimationStatus.decreasing;\n        break;\n\n      case Enums_1.RotateDirection.clockwise:\n        this.rotate.status = Enums_1.AnimationStatus.increasing;\n        break;\n    }\n\n    var rotateAnimation = this.particlesOptions.rotate.animation;\n\n    if (rotateAnimation.enable) {\n      this.rotate.velocity = rotateAnimation.speed / 360 * container.retina.reduceFactor;\n\n      if (!rotateAnimation.sync) {\n        this.rotate.velocity *= Math.random();\n      }\n    }\n\n    var sizeAnimation = this.particlesOptions.size.animation;\n\n    if (sizeAnimation.enable) {\n      this.size.status = Enums_1.AnimationStatus.increasing;\n\n      if (!randomSize) {\n        switch (sizeAnimation.startValue) {\n          case Enums_1.StartValueType.min:\n            this.size.value = sizeAnimation.minimumValue * pxRatio;\n            break;\n\n          case Enums_1.StartValueType.random:\n            this.size.value = Utils_1.NumberUtils.randomInRange(sizeAnimation.minimumValue * pxRatio, this.size.value);\n            break;\n\n          case Enums_1.StartValueType.max:\n          default:\n            this.size.status = Enums_1.AnimationStatus.decreasing;\n            break;\n        }\n      }\n\n      this.size.velocity = ((_g = this.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= Math.random();\n      }\n    }\n\n    this.color = {\n      value: Utils_1.ColorUtils.colorToHsl(color, this.id, reduceDuplicates)\n    };\n    var colorAnimation = this.particlesOptions.color.animation;\n\n    if (colorAnimation.enable) {\n      this.color.velocity = colorAnimation.speed / 100 * container.retina.reduceFactor;\n\n      if (!colorAnimation.sync) {\n        this.color.velocity *= Math.random();\n      }\n    }\n\n    this.position = this.calcPosition(this.container, position);\n    this.initialPosition = {\n      x: this.position.x,\n      y: this.position.y\n    };\n    this.offset = {\n      x: 0,\n      y: 0\n    };\n    var opacityOptions = this.particlesOptions.opacity;\n    var randomOpacity = opacityOptions.random;\n    var opacityValue = opacityOptions.value;\n    this.opacity = {\n      value: randomOpacity.enable ? Utils_1.NumberUtils.randomInRange(randomOpacity.minimumValue, opacityValue) : opacityValue\n    };\n    var opacityAnimation = opacityOptions.animation;\n\n    if (opacityAnimation.enable) {\n      this.opacity.status = Enums_1.AnimationStatus.increasing;\n      this.opacity.velocity = opacityAnimation.speed / 100 * container.retina.reduceFactor;\n\n      if (!opacityAnimation.sync) {\n        this.opacity.velocity *= Math.random();\n      }\n    }\n\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n\n    var imageShape = this.loadImageShape(container, drawer);\n\n    if (imageShape) {\n      this.image = imageShape.image;\n      this.fill = imageShape.fill;\n      this.close = imageShape.close;\n    }\n\n    this.stroke = this.particlesOptions.stroke instanceof Array ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke, this.id, reduceDuplicates) : this.particlesOptions.stroke;\n    this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n    this.strokeColor = {\n      value: (_h = Utils_1.ColorUtils.colorToHsl(this.stroke.color)) !== null && _h !== void 0 ? _h : this.color.value\n    };\n\n    if (typeof this.stroke.color !== \"string\") {\n      var strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n\n      if (strokeColorAnimation && this.strokeColor) {\n        if (strokeColorAnimation.enable) {\n          this.strokeColor.velocity = strokeColorAnimation.speed / 100 * container.retina.reduceFactor;\n\n          if (!strokeColorAnimation.sync) {\n            this.strokeColor.velocity = this.strokeColor.velocity * Math.random();\n          }\n        } else {\n          this.strokeColor.velocity = 0;\n        }\n\n        if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.strokeColor.value) {\n          this.strokeColor.value.h = Math.random() * 360;\n        }\n      }\n    }\n\n    var lifeOptions = particlesOptions.life;\n    this.lifeDelay = container.retina.reduceFactor ? Utils_1.NumberUtils.getValue(lifeOptions.delay) * (lifeOptions.delay.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0;\n    this.lifeDelayTime = 0;\n    this.lifeDuration = container.retina.reduceFactor ? Utils_1.NumberUtils.getValue(lifeOptions.duration) * (lifeOptions.duration.sync ? 1 : Math.random()) / container.retina.reduceFactor * 1000 : 0;\n    this.lifeTime = 0;\n    this.livesRemaining = particlesOptions.life.count;\n    this.spawning = this.lifeDelay > 0;\n\n    if (this.lifeDuration <= 0) {\n      this.lifeDuration = -1;\n    }\n\n    if (this.livesRemaining <= 0) {\n      this.livesRemaining = -1;\n    }\n\n    this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n    this.updater = new Updater_1.Updater(container, this);\n    this.infecter = new Infecter_1.Infecter(container);\n    this.mover = new Mover_1.Mover(container, this);\n  }\n\n  _createClass(Particle, [{\n    key: \"move\",\n    value: function move(delta) {\n      this.mover.move(delta);\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      this.updater.update(delta);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      this.container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      return this.bubble.radius || this.size.value;\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a;\n\n      return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color.value;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor.value) !== null && _b !== void 0 ? _b : this.color.value;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      this.links = [];\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition(container, position) {\n      var _a, _b;\n\n      var _iterator = _createForOfIteratorHelper(container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n          if (pluginPos !== undefined) {\n            return Utils_1.Utils.deepExtend({}, pluginPos);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var pos = {\n        x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n        y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height\n      };\n      var outMode = this.particlesOptions.move.outMode;\n\n      if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n        if (pos.x > container.canvas.size.width - this.size.value * 2) {\n          pos.x -= this.size.value;\n        } else if (pos.x < this.size.value * 2) {\n          pos.x += this.size.value;\n        }\n      }\n\n      if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n        if (pos.y > container.canvas.size.height - this.size.value * 2) {\n          pos.y -= this.size.value;\n        } else if (pos.y < this.size.value * 2) {\n          pos.y += this.size.value;\n        }\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"calculateVelocity\",\n    value: function calculateVelocity() {\n      var baseVelocity = Utils_1.NumberUtils.getParticleBaseVelocity(this);\n      var res = {\n        horizontal: 0,\n        vertical: 0\n      };\n      var moveOptions = this.particlesOptions.move;\n      var rad;\n      var radOffset = Math.PI / 4;\n\n      if (typeof moveOptions.angle === \"number\") {\n        rad = Math.PI / 180 * moveOptions.angle;\n      } else {\n        rad = Math.PI / 180 * moveOptions.angle.value;\n        radOffset = Math.PI / 180 * moveOptions.angle.offset;\n      }\n\n      var range = {\n        left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n        right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2)\n      };\n\n      if (moveOptions.straight) {\n        res.horizontal = baseVelocity.x;\n        res.vertical = baseVelocity.y;\n\n        if (moveOptions.random) {\n          res.horizontal += Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n          res.vertical += Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n        }\n      } else {\n        res.horizontal = baseVelocity.x + Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n        res.vertical = baseVelocity.y + Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function loadImageShape(container, drawer) {\n      var _this = this;\n\n      var _a, _b, _c, _d, _e;\n\n      if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n        return;\n      }\n\n      var imageDrawer = drawer;\n      var images = imageDrawer.getImages(container).images;\n      var imageData = this.shapeData;\n      var image = (_a = images.find(function (t) {\n        return t.source === imageData.src;\n      })) !== null && _a !== void 0 ? _a : images[0];\n      var color = this.getFillColor();\n      var imageRes;\n\n      if (!image) {\n        return;\n      }\n\n      if (image.svgData !== undefined && imageData.replaceColor && color) {\n        var svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n        var svg = new Blob([svgColoredData], {\n          type: \"image/svg+xml\"\n        });\n        var domUrl = URL || window.URL || window.webkitURL || window;\n        var url = domUrl.createObjectURL(svg);\n        var img = new Image();\n        imageRes = {\n          data: image,\n          loaded: false,\n          ratio: imageData.width / imageData.height,\n          replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n          source: imageData.src\n        };\n        img.addEventListener(\"load\", function () {\n          if (_this.image) {\n            _this.image.loaded = true;\n            image.element = img;\n          }\n\n          domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", function () {\n          domUrl.revokeObjectURL(url);\n          Utils_1.Utils.loadImage(imageData.src).then(function (img2) {\n            if (_this.image) {\n              image.element = img2.element;\n              _this.image.loaded = true;\n            }\n          });\n        });\n        img.src = url;\n      } else {\n        imageRes = {\n          data: image,\n          loaded: true,\n          ratio: imageData.width / imageData.height,\n          replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n          source: imageData.src\n        };\n      }\n\n      if (!imageRes.ratio) {\n        imageRes.ratio = 1;\n      }\n\n      var fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n      var close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n      return {\n        image: imageRes,\n        fill: fill,\n        close: close\n      };\n    }\n  }]);\n\n  return Particle;\n}();\n\nexports.Particle = Particle;","map":{"version":3,"sources":["/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/tsparticles/dist/Core/Particle.js"],"names":["Object","defineProperty","exports","value","Particle","Updater_1","require","Particles_1","Shape_1","Enums_1","Utils_1","Infecter_1","Mover_1","id","container","position","overrideOptions","_a","_b","_c","_d","_e","_f","_g","_h","_j","links","fill","close","lastNoiseTime","destroyed","misplaced","pxRatio","retina","pixelRatio","options","particlesOptions","Particles","load","particles","shapeType","shape","type","reduceDuplicates","Array","Utils","itemFromArray","overrideShapeType","shapeOptions","Shape","shapeData","deepExtend","undefined","noiseDelay","NumberUtils","getValue","move","noise","delay","initParticle","color","sizeOptions","size","sizeValue","randomSize","random","enable","direction","bubble","inRange","initialVelocity","calculateVelocity","velocity","horizontal","vertical","pathAngle","Math","atan2","rotateOptions","rotate","PI","rotateDirection","RotateDirection","index","floor","counterClockwise","clockwise","status","AnimationStatus","decreasing","increasing","rotateAnimation","animation","speed","reduceFactor","sync","sizeAnimation","startValue","StartValueType","min","minimumValue","randomInRange","max","sizeAnimationSpeed","ColorUtils","colorToHsl","colorAnimation","calcPosition","initialPosition","x","y","offset","opacityOptions","opacity","randomOpacity","opacityValue","opacityAnimation","sides","drawer","drawers","get","Plugins","getShapeDrawer","set","sideCountFunc","getSidesCount","imageShape","loadImageShape","image","stroke","strokeWidth","width","strokeColor","strokeColorAnimation","h","lifeOptions","life","lifeDelay","lifeDelayTime","lifeDuration","duration","lifeTime","livesRemaining","count","spawning","shadowColor","colorToRgb","shadow","updater","Updater","infecter","Infecter","mover","Mover","delta","update","canvas","drawParticle","radius","plugins","plugin","pluginPos","particlePosition","pos","height","outMode","isInArray","OutMode","bounce","bounceHorizontal","bounceVertical","baseVelocity","getParticleBaseVelocity","res","moveOptions","rad","radOffset","angle","range","left","sin","right","cos","straight","ShapeType","images","imageDrawer","getImages","imageData","find","t","source","src","getFillColor","imageRes","svgData","replaceColor","svgColoredData","replaceColorSvg","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","img","Image","data","loaded","ratio","replace_color","addEventListener","element","revokeObjectURL","loadImage","then","img2"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,IAAMC,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAMC,WAAW,GAAGD,OAAO,CAAC,wCAAD,CAA3B;;AACA,IAAME,OAAO,GAAGF,OAAO,CAAC,0CAAD,CAAvB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,qBAAD,CAA1B;;AACA,IAAMM,OAAO,GAAGN,OAAO,CAAC,kBAAD,CAAvB;;IACMF,Q;AACF,oBAAYS,EAAZ,EAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,eAArC,EAAsD;AAAA;;AAClD,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBC,EAAxB,EAA4BC,EAA5B,EAAgCC,EAAhC,EAAoCC,EAApC;;AACA,SAAKZ,EAAL,GAAUA,EAAV;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKY,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,QAAMC,OAAO,GAAGlB,SAAS,CAACmB,MAAV,CAAiBC,UAAjC;AACA,QAAMC,OAAO,GAAGrB,SAAS,CAACqB,OAA1B;AACA,QAAMC,gBAAgB,GAAG,IAAI7B,WAAW,CAAC8B,SAAhB,EAAzB;AACAD,IAAAA,gBAAgB,CAACE,IAAjB,CAAsBH,OAAO,CAACI,SAA9B;AACA,QAAMC,SAAS,GAAGJ,gBAAgB,CAACK,KAAjB,CAAuBC,IAAzC;AACA,QAAMC,gBAAgB,GAAGP,gBAAgB,CAACO,gBAA1C;AACA,SAAKF,KAAL,GAAaD,SAAS,YAAYI,KAArB,GAA6BlC,OAAO,CAACmC,KAAR,CAAcC,aAAd,CAA4BN,SAA5B,EAAuC,KAAK3B,EAA5C,EAAgD8B,gBAAhD,CAA7B,GAAiGH,SAA9G;;AACA,QAAIxB,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACyB,KAAtF,EAA6F;AACzF,UAAIzB,eAAe,CAACyB,KAAhB,CAAsBC,IAA1B,EAAgC;AAC5B,YAAMK,iBAAiB,GAAG/B,eAAe,CAACyB,KAAhB,CAAsBC,IAAhD;AACA,aAAKD,KAAL,GACIM,iBAAiB,YAAYH,KAA7B,GACMlC,OAAO,CAACmC,KAAR,CAAcC,aAAd,CAA4BC,iBAA5B,EAA+C,KAAKlC,EAApD,EAAwD8B,gBAAxD,CADN,GAEMI,iBAHV;AAIH;;AACD,UAAMC,YAAY,GAAG,IAAIxC,OAAO,CAACyC,KAAZ,EAArB;AACAD,MAAAA,YAAY,CAACV,IAAb,CAAkBtB,eAAe,CAACyB,KAAlC;;AACA,UAAI,KAAKA,KAAT,EAAgB;AACZ,YAAMS,SAAS,GAAGF,YAAY,CAACb,OAAb,CAAqB,KAAKM,KAA1B,CAAlB;;AACA,YAAIS,SAAJ,EAAe;AACX,eAAKA,SAAL,GAAiBxC,OAAO,CAACmC,KAAR,CAAcM,UAAd,CAAyB,EAAzB,EAA6BD,SAAS,YAAYN,KAArB,GACxClC,OAAO,CAACmC,KAAR,CAAcC,aAAd,CAA4BI,SAA5B,EAAuC,KAAKrC,EAA5C,EAAgD8B,gBAAhD,CADwC,GAExCO,SAFW,CAAjB;AAGH;AACJ;AACJ,KAlBD,MAmBK;AACD,UAAMA,UAAS,GAAGd,gBAAgB,CAACK,KAAjB,CAAuBN,OAAvB,CAA+B,KAAKM,KAApC,CAAlB;;AACA,UAAIS,UAAJ,EAAe;AACX,aAAKA,SAAL,GAAiBxC,OAAO,CAACmC,KAAR,CAAcM,UAAd,CAAyB,EAAzB,EAA6BD,UAAS,YAAYN,KAArB,GAA6BlC,OAAO,CAACmC,KAAR,CAAcC,aAAd,CAA4BI,UAA5B,EAAuC,KAAKrC,EAA5C,EAAgD8B,gBAAhD,CAA7B,GAAiGO,UAA9H,CAAjB;AACH;AACJ;;AACD,QAAIlC,eAAe,KAAKoC,SAAxB,EAAmC;AAC/BhB,MAAAA,gBAAgB,CAACE,IAAjB,CAAsBtB,eAAtB;AACH;;AACD,QAAI,CAAC,CAACC,EAAE,GAAG,KAAKiC,SAAX,MAA0B,IAA1B,IAAkCjC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACsB,SAA/D,MAA8Ea,SAAlF,EAA6F;AACzFhB,MAAAA,gBAAgB,CAACE,IAAjB,CAAsB,CAACpB,EAAE,GAAG,KAAKgC,SAAX,MAA0B,IAA1B,IAAkChC,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACqB,SAApF;AACH;;AACD,SAAKZ,IAAL,GAAY,CAACP,EAAE,GAAG,CAACD,EAAE,GAAG,KAAK+B,SAAX,MAA0B,IAA1B,IAAkC/B,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACQ,IAApE,MAA8E,IAA9E,IAAsFP,EAAE,KAAK,KAAK,CAAlG,GAAsGA,EAAtG,GAA2G,KAAKO,IAA5H;AACA,SAAKC,KAAL,GAAa,CAACN,EAAE,GAAG,CAACD,EAAE,GAAG,KAAK6B,SAAX,MAA0B,IAA1B,IAAkC7B,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACO,KAApE,MAA+E,IAA/E,IAAuFN,EAAE,KAAK,KAAK,CAAnG,GAAuGA,EAAvG,GAA4G,KAAKM,KAA9H;AACA,SAAKQ,gBAAL,GAAwBA,gBAAxB;AACA,SAAKiB,UAAL,GAAkB3C,OAAO,CAAC4C,WAAR,CAAoBC,QAApB,CAA6B,KAAKnB,gBAAL,CAAsBoB,IAAtB,CAA2BC,KAA3B,CAAiCC,KAA9D,IAAuE,IAAzF;AACA5C,IAAAA,SAAS,CAACmB,MAAV,CAAiB0B,YAAjB,CAA8B,IAA9B;AACA,QAAMC,KAAK,GAAG,KAAKxB,gBAAL,CAAsBwB,KAApC;AACA,QAAMC,WAAW,GAAG,KAAKzB,gBAAL,CAAsB0B,IAA1C;AACA,QAAMC,SAAS,GAAGrD,OAAO,CAAC4C,WAAR,CAAoBC,QAApB,CAA6BM,WAA7B,IAA4C/C,SAAS,CAACmB,MAAV,CAAiBC,UAA/E;AACA,QAAM8B,UAAU,GAAG,OAAOH,WAAW,CAACI,MAAnB,KAA8B,SAA9B,GAA0CJ,WAAW,CAACI,MAAtD,GAA+DJ,WAAW,CAACI,MAAZ,CAAmBC,MAArG;AACA,SAAKJ,IAAL,GAAY;AACR3D,MAAAA,KAAK,EAAE4D;AADC,KAAZ;AAGA,SAAKI,SAAL,GAAiB,KAAK/B,gBAAL,CAAsBoB,IAAtB,CAA2BW,SAA5C;AACA,SAAKC,MAAL,GAAc;AACVC,MAAAA,OAAO,EAAE;AADC,KAAd;AAGA,SAAKC,eAAL,GAAuB,KAAKC,iBAAL,EAAvB;AACA,SAAKC,QAAL,GAAgB;AACZC,MAAAA,UAAU,EAAE,KAAKH,eAAL,CAAqBG,UADrB;AAEZC,MAAAA,QAAQ,EAAE,KAAKJ,eAAL,CAAqBI;AAFnB,KAAhB;AAIA,SAAKC,SAAL,GAAiBC,IAAI,CAACC,KAAL,CAAW,KAAKP,eAAL,CAAqBI,QAAhC,EAA0C,KAAKJ,eAAL,CAAqBG,UAA/D,CAAjB;AACA,QAAMK,aAAa,GAAG,KAAK1C,gBAAL,CAAsB2C,MAA5C;AACA,SAAKA,MAAL,GAAc;AACV5E,MAAAA,KAAK,EAAG,CAAC2E,aAAa,CAACb,MAAd,CAAqBC,MAArB,GAA8BU,IAAI,CAACX,MAAL,KAAgB,GAA9C,GAAoDa,aAAa,CAAC3E,KAAnE,IAA4EyE,IAAI,CAACI,EAAlF,GAAwF;AADrF,KAAd;AAGA,QAAIC,eAAe,GAAGH,aAAa,CAACX,SAApC;;AACA,QAAIc,eAAe,KAAKxE,OAAO,CAACyE,eAAR,CAAwBjB,MAAhD,EAAwD;AACpD,UAAMkB,KAAK,GAAGP,IAAI,CAACQ,KAAL,CAAWR,IAAI,CAACX,MAAL,KAAgB,CAA3B,CAAd;AACAgB,MAAAA,eAAe,GAAGE,KAAK,GAAG,CAAR,GAAY1E,OAAO,CAACyE,eAAR,CAAwBG,gBAApC,GAAuD5E,OAAO,CAACyE,eAAR,CAAwBI,SAAjG;AACH;;AACD,YAAQL,eAAR;AACI,WAAKxE,OAAO,CAACyE,eAAR,CAAwBG,gBAA7B;AACA,WAAK,kBAAL;AACI,aAAKN,MAAL,CAAYQ,MAAZ,GAAqB9E,OAAO,CAAC+E,eAAR,CAAwBC,UAA7C;AACA;;AACJ,WAAKhF,OAAO,CAACyE,eAAR,CAAwBI,SAA7B;AACI,aAAKP,MAAL,CAAYQ,MAAZ,GAAqB9E,OAAO,CAAC+E,eAAR,CAAwBE,UAA7C;AACA;AAPR;;AASA,QAAMC,eAAe,GAAG,KAAKvD,gBAAL,CAAsB2C,MAAtB,CAA6Ba,SAArD;;AACA,QAAID,eAAe,CAACzB,MAApB,EAA4B;AACxB,WAAKa,MAAL,CAAYP,QAAZ,GAAwBmB,eAAe,CAACE,KAAhB,GAAwB,GAAzB,GAAgC/E,SAAS,CAACmB,MAAV,CAAiB6D,YAAxE;;AACA,UAAI,CAACH,eAAe,CAACI,IAArB,EAA2B;AACvB,aAAKhB,MAAL,CAAYP,QAAZ,IAAwBI,IAAI,CAACX,MAAL,EAAxB;AACH;AACJ;;AACD,QAAM+B,aAAa,GAAG,KAAK5D,gBAAL,CAAsB0B,IAAtB,CAA2B8B,SAAjD;;AACA,QAAII,aAAa,CAAC9B,MAAlB,EAA0B;AACtB,WAAKJ,IAAL,CAAUyB,MAAV,GAAmB9E,OAAO,CAAC+E,eAAR,CAAwBE,UAA3C;;AACA,UAAI,CAAC1B,UAAL,EAAiB;AACb,gBAAQgC,aAAa,CAACC,UAAtB;AACI,eAAKxF,OAAO,CAACyF,cAAR,CAAuBC,GAA5B;AACI,iBAAKrC,IAAL,CAAU3D,KAAV,GAAkB6F,aAAa,CAACI,YAAd,GAA6BpE,OAA/C;AACA;;AACJ,eAAKvB,OAAO,CAACyF,cAAR,CAAuBjC,MAA5B;AACI,iBAAKH,IAAL,CAAU3D,KAAV,GAAkBO,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkCL,aAAa,CAACI,YAAd,GAA6BpE,OAA/D,EAAwE,KAAK8B,IAAL,CAAU3D,KAAlF,CAAlB;AACA;;AACJ,eAAKM,OAAO,CAACyF,cAAR,CAAuBI,GAA5B;AACA;AACI,iBAAKxC,IAAL,CAAUyB,MAAV,GAAmB9E,OAAO,CAAC+E,eAAR,CAAwBC,UAA3C;AACA;AAVR;AAYH;;AACD,WAAK3B,IAAL,CAAUU,QAAV,GACK,CAAC,CAACjD,EAAE,GAAG,KAAKgF,kBAAX,MAAmC,IAAnC,IAA2ChF,EAAE,KAAK,KAAK,CAAvD,GAA2DA,EAA3D,GAAgET,SAAS,CAACmB,MAAV,CAAiBsE,kBAAlF,IAAwG,GAAzG,GACIzF,SAAS,CAACmB,MAAV,CAAiB6D,YAFzB;;AAGA,UAAI,CAACE,aAAa,CAACD,IAAnB,EAAyB;AACrB,aAAKjC,IAAL,CAAUU,QAAV,IAAsBI,IAAI,CAACX,MAAL,EAAtB;AACH;AACJ;;AACD,SAAKL,KAAL,GAAa;AACTzD,MAAAA,KAAK,EAAEO,OAAO,CAAC8F,UAAR,CAAmBC,UAAnB,CAA8B7C,KAA9B,EAAqC,KAAK/C,EAA1C,EAA8C8B,gBAA9C;AADE,KAAb;AAGA,QAAM+D,cAAc,GAAG,KAAKtE,gBAAL,CAAsBwB,KAAtB,CAA4BgC,SAAnD;;AACA,QAAIc,cAAc,CAACxC,MAAnB,EAA2B;AACvB,WAAKN,KAAL,CAAWY,QAAX,GAAuBkC,cAAc,CAACb,KAAf,GAAuB,GAAxB,GAA+B/E,SAAS,CAACmB,MAAV,CAAiB6D,YAAtE;;AACA,UAAI,CAACY,cAAc,CAACX,IAApB,EAA0B;AACtB,aAAKnC,KAAL,CAAWY,QAAX,IAAuBI,IAAI,CAACX,MAAL,EAAvB;AACH;AACJ;;AACD,SAAKlD,QAAL,GAAgB,KAAK4F,YAAL,CAAkB,KAAK7F,SAAvB,EAAkCC,QAAlC,CAAhB;AACA,SAAK6F,eAAL,GAAuB;AACnBC,MAAAA,CAAC,EAAE,KAAK9F,QAAL,CAAc8F,CADE;AAEnBC,MAAAA,CAAC,EAAE,KAAK/F,QAAL,CAAc+F;AAFE,KAAvB;AAIA,SAAKC,MAAL,GAAc;AACVF,MAAAA,CAAC,EAAE,CADO;AAEVC,MAAAA,CAAC,EAAE;AAFO,KAAd;AAIA,QAAME,cAAc,GAAG,KAAK5E,gBAAL,CAAsB6E,OAA7C;AACA,QAAMC,aAAa,GAAGF,cAAc,CAAC/C,MAArC;AACA,QAAMkD,YAAY,GAAGH,cAAc,CAAC7G,KAApC;AACA,SAAK8G,OAAL,GAAe;AACX9G,MAAAA,KAAK,EAAE+G,aAAa,CAAChD,MAAd,GACDxD,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkCa,aAAa,CAACd,YAAhD,EAA8De,YAA9D,CADC,GAEDA;AAHK,KAAf;AAKA,QAAMC,gBAAgB,GAAGJ,cAAc,CAACpB,SAAxC;;AACA,QAAIwB,gBAAgB,CAAClD,MAArB,EAA6B;AACzB,WAAK+C,OAAL,CAAa1B,MAAb,GAAsB9E,OAAO,CAAC+E,eAAR,CAAwBE,UAA9C;AACA,WAAKuB,OAAL,CAAazC,QAAb,GAAyB4C,gBAAgB,CAACvB,KAAjB,GAAyB,GAA1B,GAAiC/E,SAAS,CAACmB,MAAV,CAAiB6D,YAA1E;;AACA,UAAI,CAACsB,gBAAgB,CAACrB,IAAtB,EAA4B;AACxB,aAAKkB,OAAL,CAAazC,QAAb,IAAyBI,IAAI,CAACX,MAAL,EAAzB;AACH;AACJ;;AACD,SAAKoD,KAAL,GAAa,EAAb;AACA,QAAIC,MAAM,GAAGxG,SAAS,CAACyG,OAAV,CAAkBC,GAAlB,CAAsB,KAAK/E,KAA3B,CAAb;;AACA,QAAI,CAAC6E,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG5G,OAAO,CAAC+G,OAAR,CAAgBC,cAAhB,CAA+B,KAAKjF,KAApC,CAAT;;AACA,UAAI6E,MAAJ,EAAY;AACRxG,QAAAA,SAAS,CAACyG,OAAV,CAAkBI,GAAlB,CAAsB,KAAKlF,KAA3B,EAAkC6E,MAAlC;AACH;AACJ;;AACD,QAAMM,aAAa,GAAGN,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACO,aAA7E;;AACA,QAAID,aAAJ,EAAmB;AACf,WAAKP,KAAL,GAAaO,aAAa,CAAC,IAAD,CAA1B;AACH;;AACD,QAAME,UAAU,GAAG,KAAKC,cAAL,CAAoBjH,SAApB,EAA+BwG,MAA/B,CAAnB;;AACA,QAAIQ,UAAJ,EAAgB;AACZ,WAAKE,KAAL,GAAaF,UAAU,CAACE,KAAxB;AACA,WAAKrG,IAAL,GAAYmG,UAAU,CAACnG,IAAvB;AACA,WAAKC,KAAL,GAAakG,UAAU,CAAClG,KAAxB;AACH;;AACD,SAAKqG,MAAL,GACI,KAAK7F,gBAAL,CAAsB6F,MAAtB,YAAwCrF,KAAxC,GACMlC,OAAO,CAACmC,KAAR,CAAcC,aAAd,CAA4B,KAAKV,gBAAL,CAAsB6F,MAAlD,EAA0D,KAAKpH,EAA/D,EAAmE8B,gBAAnE,CADN,GAEM,KAAKP,gBAAL,CAAsB6F,MAHhC;AAIA,SAAKC,WAAL,GAAmB,KAAKD,MAAL,CAAYE,KAAZ,GAAoBrH,SAAS,CAACmB,MAAV,CAAiBC,UAAxD;AACA,SAAKkG,WAAL,GAAmB;AACfjI,MAAAA,KAAK,EAAE,CAACqB,EAAE,GAAGd,OAAO,CAAC8F,UAAR,CAAmBC,UAAnB,CAA8B,KAAKwB,MAAL,CAAYrE,KAA1C,CAAN,MAA4D,IAA5D,IAAoEpC,EAAE,KAAK,KAAK,CAAhF,GAAoFA,EAApF,GAAyF,KAAKoC,KAAL,CAAWzD;AAD5F,KAAnB;;AAGA,QAAI,OAAO,KAAK8H,MAAL,CAAYrE,KAAnB,KAA6B,QAAjC,EAA2C;AACvC,UAAMyE,oBAAoB,GAAG,CAAC5G,EAAE,GAAG,KAAKwG,MAAL,CAAYrE,KAAlB,MAA6B,IAA7B,IAAqCnC,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACmE,SAA9F;;AACA,UAAIyC,oBAAoB,IAAI,KAAKD,WAAjC,EAA8C;AAC1C,YAAIC,oBAAoB,CAACnE,MAAzB,EAAiC;AAC7B,eAAKkE,WAAL,CAAiB5D,QAAjB,GAA6B6D,oBAAoB,CAACxC,KAArB,GAA6B,GAA9B,GAAqC/E,SAAS,CAACmB,MAAV,CAAiB6D,YAAlF;;AACA,cAAI,CAACuC,oBAAoB,CAACtC,IAA1B,EAAgC;AAC5B,iBAAKqC,WAAL,CAAiB5D,QAAjB,GAA4B,KAAK4D,WAAL,CAAiB5D,QAAjB,GAA4BI,IAAI,CAACX,MAAL,EAAxD;AACH;AACJ,SALD,MAMK;AACD,eAAKmE,WAAL,CAAiB5D,QAAjB,GAA4B,CAA5B;AACH;;AACD,YAAI6D,oBAAoB,CAACnE,MAArB,IAA+B,CAACmE,oBAAoB,CAACtC,IAArD,IAA6D,KAAKqC,WAAL,CAAiBjI,KAAlF,EAAyF;AACrF,eAAKiI,WAAL,CAAiBjI,KAAjB,CAAuBmI,CAAvB,GAA2B1D,IAAI,CAACX,MAAL,KAAgB,GAA3C;AACH;AACJ;AACJ;;AACD,QAAMsE,WAAW,GAAGnG,gBAAgB,CAACoG,IAArC;AACA,SAAKC,SAAL,GAAiB3H,SAAS,CAACmB,MAAV,CAAiB6D,YAAjB,GACTpF,OAAO,CAAC4C,WAAR,CAAoBC,QAApB,CAA6BgF,WAAW,CAAC7E,KAAzC,KAAmD6E,WAAW,CAAC7E,KAAZ,CAAkBqC,IAAlB,GAAyB,CAAzB,GAA6BnB,IAAI,CAACX,MAAL,EAAhF,CAAD,GACCnD,SAAS,CAACmB,MAAV,CAAiB6D,YADnB,GAEE,IAHS,GAIX,CAJN;AAKA,SAAK4C,aAAL,GAAqB,CAArB;AACA,SAAKC,YAAL,GAAoB7H,SAAS,CAACmB,MAAV,CAAiB6D,YAAjB,GACZpF,OAAO,CAAC4C,WAAR,CAAoBC,QAApB,CAA6BgF,WAAW,CAACK,QAAzC,KAAsDL,WAAW,CAACK,QAAZ,CAAqB7C,IAArB,GAA4B,CAA5B,GAAgCnB,IAAI,CAACX,MAAL,EAAtF,CAAD,GACCnD,SAAS,CAACmB,MAAV,CAAiB6D,YADnB,GAEE,IAHY,GAId,CAJN;AAKA,SAAK+C,QAAL,GAAgB,CAAhB;AACA,SAAKC,cAAL,GAAsB1G,gBAAgB,CAACoG,IAAjB,CAAsBO,KAA5C;AACA,SAAKC,QAAL,GAAgB,KAAKP,SAAL,GAAiB,CAAjC;;AACA,QAAI,KAAKE,YAAL,IAAqB,CAAzB,EAA4B;AACxB,WAAKA,YAAL,GAAoB,CAAC,CAArB;AACH;;AACD,QAAI,KAAKG,cAAL,IAAuB,CAA3B,EAA8B;AAC1B,WAAKA,cAAL,GAAsB,CAAC,CAAvB;AACH;;AACD,SAAKG,WAAL,GAAmBvI,OAAO,CAAC8F,UAAR,CAAmB0C,UAAnB,CAA8B,KAAK9G,gBAAL,CAAsB+G,MAAtB,CAA6BvF,KAA3D,CAAnB;AACA,SAAKwF,OAAL,GAAe,IAAI/I,SAAS,CAACgJ,OAAd,CAAsBvI,SAAtB,EAAiC,IAAjC,CAAf;AACA,SAAKwI,QAAL,GAAgB,IAAI3I,UAAU,CAAC4I,QAAf,CAAwBzI,SAAxB,CAAhB;AACA,SAAK0I,KAAL,GAAa,IAAI5I,OAAO,CAAC6I,KAAZ,CAAkB3I,SAAlB,EAA6B,IAA7B,CAAb;AACH;;;;yBACI4I,K,EAAO;AACR,WAAKF,KAAL,CAAWhG,IAAX,CAAgBkG,KAAhB;AACH;;;2BACMA,K,EAAO;AACV,WAAKN,OAAL,CAAaO,MAAb,CAAoBD,KAApB;AACH;;;yBACIA,K,EAAO;AACR,WAAK5I,SAAL,CAAe8I,MAAf,CAAsBC,YAAtB,CAAmC,IAAnC,EAAyCH,KAAzC;AACH;;;kCACa;AACV,aAAO;AACH7C,QAAAA,CAAC,EAAE,KAAK9F,QAAL,CAAc8F,CAAd,GAAkB,KAAKE,MAAL,CAAYF,CAD9B;AAEHC,QAAAA,CAAC,EAAE,KAAK/F,QAAL,CAAc+F,CAAd,GAAkB,KAAKC,MAAL,CAAYD;AAF9B,OAAP;AAIH;;;gCACW;AACR,aAAO,KAAK1C,MAAL,CAAY0F,MAAZ,IAAsB,KAAKhG,IAAL,CAAU3D,KAAvC;AACH;;;mCACc;AACX,UAAIc,EAAJ;;AACA,aAAO,CAACA,EAAE,GAAG,KAAKmD,MAAL,CAAYR,KAAlB,MAA6B,IAA7B,IAAqC3C,EAAE,KAAK,KAAK,CAAjD,GAAqDA,EAArD,GAA0D,KAAK2C,KAAL,CAAWzD,KAA5E;AACH;;;qCACgB;AACb,UAAIc,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,KAAKmD,MAAL,CAAYR,KAAlB,MAA6B,IAA7B,IAAqC3C,EAAE,KAAK,KAAK,CAAjD,GAAqDA,EAArD,GAA0D,KAAKmH,WAAL,CAAiBjI,KAAjF,MAA4F,IAA5F,IAAoGe,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyH,KAAK0C,KAAL,CAAWzD,KAA3I;AACH;;;8BACS;AACN,WAAK2B,SAAL,GAAiB,IAAjB;AACA,WAAKsC,MAAL,CAAYC,OAAZ,GAAsB,KAAtB;AACA,WAAK3C,KAAL,GAAa,EAAb;AACH;;;iCACYZ,S,EAAWC,Q,EAAU;AAC9B,UAAIE,EAAJ,EAAQC,EAAR;;AAD8B,iDAELJ,SAAS,CAACiJ,OAFL;AAAA;;AAAA;AAE9B,4DAA4C;AAAA;AAAA,cAA9BC,MAA8B;;AACxC,cAAMC,SAAS,GAAGD,MAAM,CAACE,gBAAP,KAA4B9G,SAA5B,GAAwC4G,MAAM,CAACE,gBAAP,CAAwBnJ,QAAxB,EAAkC,IAAlC,CAAxC,GAAkFqC,SAApG;;AACA,cAAI6G,SAAS,KAAK7G,SAAlB,EAA6B;AACzB,mBAAO1C,OAAO,CAACmC,KAAR,CAAcM,UAAd,CAAyB,EAAzB,EAA6B8G,SAA7B,CAAP;AACH;AACJ;AAP6B;AAAA;AAAA;AAAA;AAAA;;AAQ9B,UAAME,GAAG,GAAG;AACRtD,QAAAA,CAAC,EAAE,CAAC5F,EAAE,GAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC8F,CAAnE,MAA0E,IAA1E,IAAkF5F,EAAE,KAAK,KAAK,CAA9F,GAAkGA,EAAlG,GAAuG2D,IAAI,CAACX,MAAL,KAAgBnD,SAAS,CAAC8I,MAAV,CAAiB9F,IAAjB,CAAsBqE,KADxI;AAERrB,QAAAA,CAAC,EAAE,CAAC5F,EAAE,GAAGH,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC+F,CAAnE,MAA0E,IAA1E,IAAkF5F,EAAE,KAAK,KAAK,CAA9F,GAAkGA,EAAlG,GAAuG0D,IAAI,CAACX,MAAL,KAAgBnD,SAAS,CAAC8I,MAAV,CAAiB9F,IAAjB,CAAsBsG;AAFxI,OAAZ;AAIA,UAAMC,OAAO,GAAG,KAAKjI,gBAAL,CAAsBoB,IAAtB,CAA2B6G,OAA3C;;AACA,UAAI3J,OAAO,CAACmC,KAAR,CAAcyH,SAAd,CAAwBD,OAAxB,EAAiC5J,OAAO,CAAC8J,OAAR,CAAgBC,MAAjD,KAA4D9J,OAAO,CAACmC,KAAR,CAAcyH,SAAd,CAAwBD,OAAxB,EAAiC5J,OAAO,CAAC8J,OAAR,CAAgBE,gBAAjD,CAAhE,EAAoI;AAChI,YAAIN,GAAG,CAACtD,CAAJ,GAAQ/F,SAAS,CAAC8I,MAAV,CAAiB9F,IAAjB,CAAsBqE,KAAtB,GAA8B,KAAKrE,IAAL,CAAU3D,KAAV,GAAkB,CAA5D,EAA+D;AAC3DgK,UAAAA,GAAG,CAACtD,CAAJ,IAAS,KAAK/C,IAAL,CAAU3D,KAAnB;AACH,SAFD,MAGK,IAAIgK,GAAG,CAACtD,CAAJ,GAAQ,KAAK/C,IAAL,CAAU3D,KAAV,GAAkB,CAA9B,EAAiC;AAClCgK,UAAAA,GAAG,CAACtD,CAAJ,IAAS,KAAK/C,IAAL,CAAU3D,KAAnB;AACH;AACJ;;AACD,UAAIO,OAAO,CAACmC,KAAR,CAAcyH,SAAd,CAAwBD,OAAxB,EAAiC5J,OAAO,CAAC8J,OAAR,CAAgBC,MAAjD,KAA4D9J,OAAO,CAACmC,KAAR,CAAcyH,SAAd,CAAwBD,OAAxB,EAAiC5J,OAAO,CAAC8J,OAAR,CAAgBG,cAAjD,CAAhE,EAAkI;AAC9H,YAAIP,GAAG,CAACrD,CAAJ,GAAQhG,SAAS,CAAC8I,MAAV,CAAiB9F,IAAjB,CAAsBsG,MAAtB,GAA+B,KAAKtG,IAAL,CAAU3D,KAAV,GAAkB,CAA7D,EAAgE;AAC5DgK,UAAAA,GAAG,CAACrD,CAAJ,IAAS,KAAKhD,IAAL,CAAU3D,KAAnB;AACH,SAFD,MAGK,IAAIgK,GAAG,CAACrD,CAAJ,GAAQ,KAAKhD,IAAL,CAAU3D,KAAV,GAAkB,CAA9B,EAAiC;AAClCgK,UAAAA,GAAG,CAACrD,CAAJ,IAAS,KAAKhD,IAAL,CAAU3D,KAAnB;AACH;AACJ;;AACD,aAAOgK,GAAP;AACH;;;wCACmB;AAChB,UAAMQ,YAAY,GAAGjK,OAAO,CAAC4C,WAAR,CAAoBsH,uBAApB,CAA4C,IAA5C,CAArB;AACA,UAAMC,GAAG,GAAG;AACRpG,QAAAA,UAAU,EAAE,CADJ;AAERC,QAAAA,QAAQ,EAAE;AAFF,OAAZ;AAIA,UAAMoG,WAAW,GAAG,KAAK1I,gBAAL,CAAsBoB,IAA1C;AACA,UAAIuH,GAAJ;AACA,UAAIC,SAAS,GAAGpG,IAAI,CAACI,EAAL,GAAU,CAA1B;;AACA,UAAI,OAAO8F,WAAW,CAACG,KAAnB,KAA6B,QAAjC,EAA2C;AACvCF,QAAAA,GAAG,GAAInG,IAAI,CAACI,EAAL,GAAU,GAAX,GAAkB8F,WAAW,CAACG,KAApC;AACH,OAFD,MAGK;AACDF,QAAAA,GAAG,GAAInG,IAAI,CAACI,EAAL,GAAU,GAAX,GAAkB8F,WAAW,CAACG,KAAZ,CAAkB9K,KAA1C;AACA6K,QAAAA,SAAS,GAAIpG,IAAI,CAACI,EAAL,GAAU,GAAX,GAAkB8F,WAAW,CAACG,KAAZ,CAAkBlE,MAAhD;AACH;;AACD,UAAMmE,KAAK,GAAG;AACVC,QAAAA,IAAI,EAAEvG,IAAI,CAACwG,GAAL,CAASJ,SAAS,GAAGD,GAAG,GAAG,CAA3B,IAAgCnG,IAAI,CAACwG,GAAL,CAASJ,SAAS,GAAGD,GAAG,GAAG,CAA3B,CAD5B;AAEVM,QAAAA,KAAK,EAAEzG,IAAI,CAAC0G,GAAL,CAASN,SAAS,GAAGD,GAAG,GAAG,CAA3B,IAAgCnG,IAAI,CAAC0G,GAAL,CAASN,SAAS,GAAGD,GAAG,GAAG,CAA3B;AAF7B,OAAd;;AAIA,UAAID,WAAW,CAACS,QAAhB,EAA0B;AACtBV,QAAAA,GAAG,CAACpG,UAAJ,GAAiBkG,YAAY,CAAC9D,CAA9B;AACAgE,QAAAA,GAAG,CAACnG,QAAJ,GAAeiG,YAAY,CAAC7D,CAA5B;;AACA,YAAIgE,WAAW,CAAC7G,MAAhB,EAAwB;AACpB4G,UAAAA,GAAG,CAACpG,UAAJ,IAAkB/D,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkC6E,KAAK,CAACC,IAAxC,EAA8CD,KAAK,CAACG,KAApD,IAA6D,CAA/E;AACAR,UAAAA,GAAG,CAACnG,QAAJ,IAAgBhE,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkC6E,KAAK,CAACC,IAAxC,EAA8CD,KAAK,CAACG,KAApD,IAA6D,CAA7E;AACH;AACJ,OAPD,MAQK;AACDR,QAAAA,GAAG,CAACpG,UAAJ,GAAiBkG,YAAY,CAAC9D,CAAb,GAAiBnG,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkC6E,KAAK,CAACC,IAAxC,EAA8CD,KAAK,CAACG,KAApD,IAA6D,CAA/F;AACAR,QAAAA,GAAG,CAACnG,QAAJ,GAAeiG,YAAY,CAAC7D,CAAb,GAAiBpG,OAAO,CAAC4C,WAAR,CAAoB+C,aAApB,CAAkC6E,KAAK,CAACC,IAAxC,EAA8CD,KAAK,CAACG,KAApD,IAA6D,CAA7F;AACH;;AACD,aAAOR,GAAP;AACH;;;mCACc/J,S,EAAWwG,M,EAAQ;AAAA;;AAC9B,UAAIrG,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBC,EAApB;;AACA,UAAI,EAAE,KAAKoB,KAAL,KAAehC,OAAO,CAAC+K,SAAR,CAAkBxD,KAAjC,IAA0C,KAAKvF,KAAL,KAAehC,OAAO,CAAC+K,SAAR,CAAkBC,MAA7E,CAAJ,EAA0F;AACtF;AACH;;AACD,UAAMC,WAAW,GAAGpE,MAApB;AACA,UAAMmE,MAAM,GAAGC,WAAW,CAACC,SAAZ,CAAsB7K,SAAtB,EAAiC2K,MAAhD;AACA,UAAMG,SAAS,GAAG,KAAK1I,SAAvB;AACA,UAAM8E,KAAK,GAAG,CAAC/G,EAAE,GAAGwK,MAAM,CAACI,IAAP,CAAY,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,MAAF,KAAaH,SAAS,CAACI,GAA9B;AAAA,OAAZ,CAAN,MAA0D,IAA1D,IAAkE/K,EAAE,KAAK,KAAK,CAA9E,GAAkFA,EAAlF,GAAuFwK,MAAM,CAAC,CAAD,CAA3G;AACA,UAAM7H,KAAK,GAAG,KAAKqI,YAAL,EAAd;AACA,UAAIC,QAAJ;;AACA,UAAI,CAAClE,KAAL,EAAY;AACR;AACH;;AACD,UAAIA,KAAK,CAACmE,OAAN,KAAkB/I,SAAlB,IAA+BwI,SAAS,CAACQ,YAAzC,IAAyDxI,KAA7D,EAAoE;AAChE,YAAMyI,cAAc,GAAG3L,OAAO,CAAC8F,UAAR,CAAmB8F,eAAnB,CAAmCtE,KAAnC,EAA0CpE,KAA1C,EAAiD,KAAKqD,OAAL,CAAa9G,KAA9D,CAAvB;AACA,YAAMoM,GAAG,GAAG,IAAIC,IAAJ,CAAS,CAACH,cAAD,CAAT,EAA2B;AAAE3J,UAAAA,IAAI,EAAE;AAAR,SAA3B,CAAZ;AACA,YAAM+J,MAAM,GAAGC,GAAG,IAAIC,MAAM,CAACD,GAAd,IAAqBC,MAAM,CAACC,SAA5B,IAAyCD,MAAxD;AACA,YAAME,GAAG,GAAGJ,MAAM,CAACK,eAAP,CAAuBP,GAAvB,CAAZ;AACA,YAAMQ,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAd,QAAAA,QAAQ,GAAG;AACPe,UAAAA,IAAI,EAAEjF,KADC;AAEPkF,UAAAA,MAAM,EAAE,KAFD;AAGPC,UAAAA,KAAK,EAAEvB,SAAS,CAACzD,KAAV,GAAkByD,SAAS,CAACxB,MAH5B;AAIPgC,UAAAA,YAAY,EAAE,CAAClL,EAAE,GAAG0K,SAAS,CAACQ,YAAhB,MAAkC,IAAlC,IAA0ClL,EAAE,KAAK,KAAK,CAAtD,GAA0DA,EAA1D,GAA+D0K,SAAS,CAACwB,aAJhF;AAKPrB,UAAAA,MAAM,EAAEH,SAAS,CAACI;AALX,SAAX;AAOAe,QAAAA,GAAG,CAACM,gBAAJ,CAAqB,MAArB,EAA6B,YAAM;AAC/B,cAAI,KAAI,CAACrF,KAAT,EAAgB;AACZ,YAAA,KAAI,CAACA,KAAL,CAAWkF,MAAX,GAAoB,IAApB;AACAlF,YAAAA,KAAK,CAACsF,OAAN,GAAgBP,GAAhB;AACH;;AACDN,UAAAA,MAAM,CAACc,eAAP,CAAuBV,GAAvB;AACH,SAND;AAOAE,QAAAA,GAAG,CAACM,gBAAJ,CAAqB,OAArB,EAA8B,YAAM;AAChCZ,UAAAA,MAAM,CAACc,eAAP,CAAuBV,GAAvB;AACAnM,UAAAA,OAAO,CAACmC,KAAR,CAAc2K,SAAd,CAAwB5B,SAAS,CAACI,GAAlC,EAAuCyB,IAAvC,CAA4C,UAACC,IAAD,EAAU;AAClD,gBAAI,KAAI,CAAC1F,KAAT,EAAgB;AACZA,cAAAA,KAAK,CAACsF,OAAN,GAAgBI,IAAI,CAACJ,OAArB;AACA,cAAA,KAAI,CAACtF,KAAL,CAAWkF,MAAX,GAAoB,IAApB;AACH;AACJ,WALD;AAMH,SARD;AASAH,QAAAA,GAAG,CAACf,GAAJ,GAAUa,GAAV;AACH,OA9BD,MA+BK;AACDX,QAAAA,QAAQ,GAAG;AACPe,UAAAA,IAAI,EAAEjF,KADC;AAEPkF,UAAAA,MAAM,EAAE,IAFD;AAGPC,UAAAA,KAAK,EAAEvB,SAAS,CAACzD,KAAV,GAAkByD,SAAS,CAACxB,MAH5B;AAIPgC,UAAAA,YAAY,EAAE,CAACjL,EAAE,GAAGyK,SAAS,CAACQ,YAAhB,MAAkC,IAAlC,IAA0CjL,EAAE,KAAK,KAAK,CAAtD,GAA0DA,EAA1D,GAA+DyK,SAAS,CAACwB,aAJhF;AAKPrB,UAAAA,MAAM,EAAEH,SAAS,CAACI;AALX,SAAX;AAOH;;AACD,UAAI,CAACE,QAAQ,CAACiB,KAAd,EAAqB;AACjBjB,QAAAA,QAAQ,CAACiB,KAAT,GAAiB,CAAjB;AACH;;AACD,UAAMxL,IAAI,GAAG,CAACP,EAAE,GAAGwK,SAAS,CAACjK,IAAhB,MAA0B,IAA1B,IAAkCP,EAAE,KAAK,KAAK,CAA9C,GAAkDA,EAAlD,GAAuD,KAAKO,IAAzE;AACA,UAAMC,KAAK,GAAG,CAACP,EAAE,GAAGuK,SAAS,CAAChK,KAAhB,MAA2B,IAA3B,IAAmCP,EAAE,KAAK,KAAK,CAA/C,GAAmDA,EAAnD,GAAwD,KAAKO,KAA3E;AACA,aAAO;AACHoG,QAAAA,KAAK,EAAEkE,QADJ;AAEHvK,QAAAA,IAAI,EAAJA,IAFG;AAGHC,QAAAA,KAAK,EAALA;AAHG,OAAP;AAKH;;;;;;AAEL1B,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Particle = void 0;\nconst Updater_1 = require(\"./Particle/Updater\");\nconst Particles_1 = require(\"../Options/Classes/Particles/Particles\");\nconst Shape_1 = require(\"../Options/Classes/Particles/Shape/Shape\");\nconst Enums_1 = require(\"../Enums\");\nconst Utils_1 = require(\"../Utils\");\nconst Infecter_1 = require(\"./Particle/Infecter\");\nconst Mover_1 = require(\"./Particle/Mover\");\nclass Particle {\n    constructor(id, container, position, overrideOptions) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        this.id = id;\n        this.container = container;\n        this.links = [];\n        this.fill = true;\n        this.close = true;\n        this.lastNoiseTime = 0;\n        this.destroyed = false;\n        this.misplaced = false;\n        const pxRatio = container.retina.pixelRatio;\n        const options = container.options;\n        const particlesOptions = new Particles_1.Particles();\n        particlesOptions.load(options.particles);\n        const shapeType = particlesOptions.shape.type;\n        const reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = shapeType instanceof Array ? Utils_1.Utils.itemFromArray(shapeType, this.id, reduceDuplicates) : shapeType;\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape =\n                    overrideShapeType instanceof Array\n                        ? Utils_1.Utils.itemFromArray(overrideShapeType, this.id, reduceDuplicates)\n                        : overrideShapeType;\n            }\n            const shapeOptions = new Shape_1.Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                const shapeData = shapeOptions.options[this.shape];\n                if (shapeData) {\n                    this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array\n                        ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates)\n                        : shapeData);\n                }\n            }\n        }\n        else {\n            const shapeData = particlesOptions.shape.options[this.shape];\n            if (shapeData) {\n                this.shapeData = Utils_1.Utils.deepExtend({}, shapeData instanceof Array ? Utils_1.Utils.itemFromArray(shapeData, this.id, reduceDuplicates) : shapeData);\n            }\n        }\n        if (overrideOptions !== undefined) {\n            particlesOptions.load(overrideOptions);\n        }\n        if (((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles) !== undefined) {\n            particlesOptions.load((_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.particles);\n        }\n        this.fill = (_d = (_c = this.shapeData) === null || _c === void 0 ? void 0 : _c.fill) !== null && _d !== void 0 ? _d : this.fill;\n        this.close = (_f = (_e = this.shapeData) === null || _e === void 0 ? void 0 : _e.close) !== null && _f !== void 0 ? _f : this.close;\n        this.particlesOptions = particlesOptions;\n        this.noiseDelay = Utils_1.NumberUtils.getValue(this.particlesOptions.move.noise.delay) * 1000;\n        container.retina.initParticle(this);\n        const color = this.particlesOptions.color;\n        const sizeOptions = this.particlesOptions.size;\n        const sizeValue = Utils_1.NumberUtils.getValue(sizeOptions) * container.retina.pixelRatio;\n        const randomSize = typeof sizeOptions.random === \"boolean\" ? sizeOptions.random : sizeOptions.random.enable;\n        this.size = {\n            value: sizeValue,\n        };\n        this.direction = this.particlesOptions.move.direction;\n        this.bubble = {\n            inRange: false,\n        };\n        this.initialVelocity = this.calculateVelocity();\n        this.velocity = {\n            horizontal: this.initialVelocity.horizontal,\n            vertical: this.initialVelocity.vertical,\n        };\n        this.pathAngle = Math.atan2(this.initialVelocity.vertical, this.initialVelocity.horizontal);\n        const rotateOptions = this.particlesOptions.rotate;\n        this.rotate = {\n            value: ((rotateOptions.random.enable ? Math.random() * 360 : rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === Enums_1.RotateDirection.random) {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? Enums_1.RotateDirection.counterClockwise : Enums_1.RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case Enums_1.RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                this.rotate.status = Enums_1.AnimationStatus.decreasing;\n                break;\n            case Enums_1.RotateDirection.clockwise:\n                this.rotate.status = Enums_1.AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = this.particlesOptions.rotate.animation;\n        if (rotateAnimation.enable) {\n            this.rotate.velocity = (rotateAnimation.speed / 360) * container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                this.rotate.velocity *= Math.random();\n            }\n        }\n        const sizeAnimation = this.particlesOptions.size.animation;\n        if (sizeAnimation.enable) {\n            this.size.status = Enums_1.AnimationStatus.increasing;\n            if (!randomSize) {\n                switch (sizeAnimation.startValue) {\n                    case Enums_1.StartValueType.min:\n                        this.size.value = sizeAnimation.minimumValue * pxRatio;\n                        break;\n                    case Enums_1.StartValueType.random:\n                        this.size.value = Utils_1.NumberUtils.randomInRange(sizeAnimation.minimumValue * pxRatio, this.size.value);\n                        break;\n                    case Enums_1.StartValueType.max:\n                    default:\n                        this.size.status = Enums_1.AnimationStatus.decreasing;\n                        break;\n                }\n            }\n            this.size.velocity =\n                (((_g = this.sizeAnimationSpeed) !== null && _g !== void 0 ? _g : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= Math.random();\n            }\n        }\n        this.color = {\n            value: Utils_1.ColorUtils.colorToHsl(color, this.id, reduceDuplicates),\n        };\n        const colorAnimation = this.particlesOptions.color.animation;\n        if (colorAnimation.enable) {\n            this.color.velocity = (colorAnimation.speed / 100) * container.retina.reduceFactor;\n            if (!colorAnimation.sync) {\n                this.color.velocity *= Math.random();\n            }\n        }\n        this.position = this.calcPosition(this.container, position);\n        this.initialPosition = {\n            x: this.position.x,\n            y: this.position.y,\n        };\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        const opacityOptions = this.particlesOptions.opacity;\n        const randomOpacity = opacityOptions.random;\n        const opacityValue = opacityOptions.value;\n        this.opacity = {\n            value: randomOpacity.enable\n                ? Utils_1.NumberUtils.randomInRange(randomOpacity.minimumValue, opacityValue)\n                : opacityValue,\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            this.opacity.status = Enums_1.AnimationStatus.increasing;\n            this.opacity.velocity = (opacityAnimation.speed / 100) * container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                this.opacity.velocity *= Math.random();\n            }\n        }\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = Utils_1.Plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        const imageShape = this.loadImageShape(container, drawer);\n        if (imageShape) {\n            this.image = imageShape.image;\n            this.fill = imageShape.fill;\n            this.close = imageShape.close;\n        }\n        this.stroke =\n            this.particlesOptions.stroke instanceof Array\n                ? Utils_1.Utils.itemFromArray(this.particlesOptions.stroke, this.id, reduceDuplicates)\n                : this.particlesOptions.stroke;\n        this.strokeWidth = this.stroke.width * container.retina.pixelRatio;\n        this.strokeColor = {\n            value: (_h = Utils_1.ColorUtils.colorToHsl(this.stroke.color)) !== null && _h !== void 0 ? _h : this.color.value,\n        };\n        if (typeof this.stroke.color !== \"string\") {\n            const strokeColorAnimation = (_j = this.stroke.color) === null || _j === void 0 ? void 0 : _j.animation;\n            if (strokeColorAnimation && this.strokeColor) {\n                if (strokeColorAnimation.enable) {\n                    this.strokeColor.velocity = (strokeColorAnimation.speed / 100) * container.retina.reduceFactor;\n                    if (!strokeColorAnimation.sync) {\n                        this.strokeColor.velocity = this.strokeColor.velocity * Math.random();\n                    }\n                }\n                else {\n                    this.strokeColor.velocity = 0;\n                }\n                if (strokeColorAnimation.enable && !strokeColorAnimation.sync && this.strokeColor.value) {\n                    this.strokeColor.value.h = Math.random() * 360;\n                }\n            }\n        }\n        const lifeOptions = particlesOptions.life;\n        this.lifeDelay = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.delay) * (lifeOptions.delay.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeDelayTime = 0;\n        this.lifeDuration = container.retina.reduceFactor\n            ? ((Utils_1.NumberUtils.getValue(lifeOptions.duration) * (lifeOptions.duration.sync ? 1 : Math.random())) /\n                container.retina.reduceFactor) *\n                1000\n            : 0;\n        this.lifeTime = 0;\n        this.livesRemaining = particlesOptions.life.count;\n        this.spawning = this.lifeDelay > 0;\n        if (this.lifeDuration <= 0) {\n            this.lifeDuration = -1;\n        }\n        if (this.livesRemaining <= 0) {\n            this.livesRemaining = -1;\n        }\n        this.shadowColor = Utils_1.ColorUtils.colorToRgb(this.particlesOptions.shadow.color);\n        this.updater = new Updater_1.Updater(container, this);\n        this.infecter = new Infecter_1.Infecter(container);\n        this.mover = new Mover_1.Mover(container, this);\n    }\n    move(delta) {\n        this.mover.move(delta);\n    }\n    update(delta) {\n        this.updater.update(delta);\n    }\n    draw(delta) {\n        this.container.canvas.drawParticle(this, delta);\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius || this.size.value;\n    }\n    getFillColor() {\n        var _a;\n        return (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.color.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : this.strokeColor.value) !== null && _b !== void 0 ? _b : this.color.value;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.links = [];\n    }\n    calcPosition(container, position) {\n        var _a, _b;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Utils_1.Utils.deepExtend({}, pluginPos);\n            }\n        }\n        const pos = {\n            x: (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * container.canvas.size.width,\n            y: (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * container.canvas.size.height,\n        };\n        const outMode = this.particlesOptions.move.outMode;\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceHorizontal)) {\n            if (pos.x > container.canvas.size.width - this.size.value * 2) {\n                pos.x -= this.size.value;\n            }\n            else if (pos.x < this.size.value * 2) {\n                pos.x += this.size.value;\n            }\n        }\n        if (Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounce) || Utils_1.Utils.isInArray(outMode, Enums_1.OutMode.bounceVertical)) {\n            if (pos.y > container.canvas.size.height - this.size.value * 2) {\n                pos.y -= this.size.value;\n            }\n            else if (pos.y < this.size.value * 2) {\n                pos.y += this.size.value;\n            }\n        }\n        return pos;\n    }\n    calculateVelocity() {\n        const baseVelocity = Utils_1.NumberUtils.getParticleBaseVelocity(this);\n        const res = {\n            horizontal: 0,\n            vertical: 0,\n        };\n        const moveOptions = this.particlesOptions.move;\n        let rad;\n        let radOffset = Math.PI / 4;\n        if (typeof moveOptions.angle === \"number\") {\n            rad = (Math.PI / 180) * moveOptions.angle;\n        }\n        else {\n            rad = (Math.PI / 180) * moveOptions.angle.value;\n            radOffset = (Math.PI / 180) * moveOptions.angle.offset;\n        }\n        const range = {\n            left: Math.sin(radOffset + rad / 2) - Math.sin(radOffset - rad / 2),\n            right: Math.cos(radOffset + rad / 2) - Math.cos(radOffset - rad / 2),\n        };\n        if (moveOptions.straight) {\n            res.horizontal = baseVelocity.x;\n            res.vertical = baseVelocity.y;\n            if (moveOptions.random) {\n                res.horizontal += Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n                res.vertical += Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n            }\n        }\n        else {\n            res.horizontal = baseVelocity.x + Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n            res.vertical = baseVelocity.y + Utils_1.NumberUtils.randomInRange(range.left, range.right) / 2;\n        }\n        return res;\n    }\n    loadImageShape(container, drawer) {\n        var _a, _b, _c, _d, _e;\n        if (!(this.shape === Enums_1.ShapeType.image || this.shape === Enums_1.ShapeType.images)) {\n            return;\n        }\n        const imageDrawer = drawer;\n        const images = imageDrawer.getImages(container).images;\n        const imageData = this.shapeData;\n        const image = (_a = images.find((t) => t.source === imageData.src)) !== null && _a !== void 0 ? _a : images[0];\n        const color = this.getFillColor();\n        let imageRes;\n        if (!image) {\n            return;\n        }\n        if (image.svgData !== undefined && imageData.replaceColor && color) {\n            const svgColoredData = Utils_1.ColorUtils.replaceColorSvg(image, color, this.opacity.value);\n            const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n            const domUrl = URL || window.URL || window.webkitURL || window;\n            const url = domUrl.createObjectURL(svg);\n            const img = new Image();\n            imageRes = {\n                data: image,\n                loaded: false,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_b = imageData.replaceColor) !== null && _b !== void 0 ? _b : imageData.replace_color,\n                source: imageData.src,\n            };\n            img.addEventListener(\"load\", () => {\n                if (this.image) {\n                    this.image.loaded = true;\n                    image.element = img;\n                }\n                domUrl.revokeObjectURL(url);\n            });\n            img.addEventListener(\"error\", () => {\n                domUrl.revokeObjectURL(url);\n                Utils_1.Utils.loadImage(imageData.src).then((img2) => {\n                    if (this.image) {\n                        image.element = img2.element;\n                        this.image.loaded = true;\n                    }\n                });\n            });\n            img.src = url;\n        }\n        else {\n            imageRes = {\n                data: image,\n                loaded: true,\n                ratio: imageData.width / imageData.height,\n                replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n                source: imageData.src,\n            };\n        }\n        if (!imageRes.ratio) {\n            imageRes.ratio = 1;\n        }\n        const fill = (_d = imageData.fill) !== null && _d !== void 0 ? _d : this.fill;\n        const close = (_e = imageData.close) !== null && _e !== void 0 ? _e : this.close;\n        return {\n            image: imageRes,\n            fill,\n            close,\n        };\n    }\n}\nexports.Particle = Particle;\n"]},"metadata":{},"sourceType":"script"}