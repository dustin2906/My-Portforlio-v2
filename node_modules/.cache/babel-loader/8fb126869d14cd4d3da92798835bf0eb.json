{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FrameManager = void 0;\n\nvar FrameManager = /*#__PURE__*/function () {\n  function FrameManager(container) {\n    _classCallCheck(this, FrameManager);\n\n    this.container = container;\n  }\n\n  _createClass(FrameManager, [{\n    key: \"nextFrame\",\n    value: function nextFrame(timestamp) {\n      try {\n        var container = this.container;\n\n        if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n          container.draw();\n          return;\n        }\n\n        var deltaValue = timestamp - container.lastFrameTime;\n        var delta = {\n          value: deltaValue,\n          factor: 60 * deltaValue / 1000\n        };\n        container.lastFrameTime = timestamp;\n        container.particles.draw(delta);\n\n        if (container.getAnimationStatus()) {\n          container.draw();\n        }\n      } catch (e) {\n        console.error(\"tsParticles error in animation loop\", e);\n      }\n    }\n  }]);\n\n  return FrameManager;\n}();\n\nexports.FrameManager = FrameManager;","map":{"version":3,"sources":["/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/tsparticles/dist/Core/FrameManager.js"],"names":["Object","defineProperty","exports","value","FrameManager","container","timestamp","lastFrameTime","undefined","fpsLimit","draw","deltaValue","delta","factor","particles","getAnimationStatus","e","console","error"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;IACMA,Y;AACF,wBAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;;;8BACSC,S,EAAW;AACjB,UAAI;AACA,YAAMD,SAAS,GAAG,KAAKA,SAAvB;;AACA,YAAIA,SAAS,CAACE,aAAV,KAA4BC,SAA5B,IACAF,SAAS,GAAGD,SAAS,CAACE,aAAV,GAA0B,OAAOF,SAAS,CAACI,QAD3D,EACqE;AACjEJ,UAAAA,SAAS,CAACK,IAAV;AACA;AACH;;AACD,YAAMC,UAAU,GAAGL,SAAS,GAAGD,SAAS,CAACE,aAAzC;AACA,YAAMK,KAAK,GAAG;AACVT,UAAAA,KAAK,EAAEQ,UADG;AAEVE,UAAAA,MAAM,EAAG,KAAKF,UAAN,GAAoB;AAFlB,SAAd;AAIAN,QAAAA,SAAS,CAACE,aAAV,GAA0BD,SAA1B;AACAD,QAAAA,SAAS,CAACS,SAAV,CAAoBJ,IAApB,CAAyBE,KAAzB;;AACA,YAAIP,SAAS,CAACU,kBAAV,EAAJ,EAAoC;AAChCV,UAAAA,SAAS,CAACK,IAAV;AACH;AACJ,OAjBD,CAkBA,OAAOM,CAAP,EAAU;AACNC,QAAAA,OAAO,CAACC,KAAR,CAAc,qCAAd,EAAqDF,CAArD;AACH;AACJ;;;;;;AAELd,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FrameManager = void 0;\nclass FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    nextFrame(timestamp) {\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw();\n                return;\n            }\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lastFrameTime = timestamp;\n            container.particles.draw(delta);\n            if (container.getAnimationStatus()) {\n                container.draw();\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\nexports.FrameManager = FrameManager;\n"]},"metadata":{},"sourceType":"script"}