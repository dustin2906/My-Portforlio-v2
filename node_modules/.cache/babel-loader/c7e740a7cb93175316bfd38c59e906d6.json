{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EventListeners = void 0;\n\nconst Enums_1 = require(\"../Enums\");\n\nconst Constants_1 = require(\"./Constants\");\n\nclass EventListeners {\n  constructor(container) {\n    this.container = container;\n    this.canPush = true;\n\n    this.mouseMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchStartHandler = e => this.mouseTouchMove(e);\n\n    this.touchMoveHandler = e => this.mouseTouchMove(e);\n\n    this.touchEndHandler = () => this.mouseTouchFinish();\n\n    this.mouseLeaveHandler = () => this.mouseTouchFinish();\n\n    this.touchCancelHandler = () => this.mouseTouchFinish();\n\n    this.touchEndClickHandler = e => this.mouseTouchClick(e);\n\n    this.mouseUpHandler = e => this.mouseTouchClick(e);\n\n    this.mouseDownHandler = () => this.mouseDown();\n\n    this.visibilityChangeHandler = () => this.handleVisibilityChange();\n\n    this.resizeHandler = () => this.handleWindowResize();\n  }\n\n  static manageListener(element, event, handler, add, options) {\n    if (add) {\n      let addOptions = {\n        passive: true\n      };\n\n      if (typeof options === \"boolean\") {\n        addOptions.capture = options;\n      } else if (options !== undefined) {\n        addOptions = options;\n      }\n\n      element.addEventListener(event, handler, addOptions);\n    } else {\n      const removeOptions = options;\n      element.removeEventListener(event, handler, removeOptions);\n    }\n  }\n\n  addListeners() {\n    this.manageListeners(true);\n  }\n\n  removeListeners() {\n    this.manageListeners(false);\n  }\n\n  manageListeners(add) {\n    const container = this.container;\n    const options = container.options;\n    const detectType = options.interactivity.detectsOn;\n    let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n\n    if (detectType === Enums_1.InteractivityDetect.window) {\n      container.interactivity.element = window;\n      mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n    } else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n      container.interactivity.element = container.canvas.element.parentNode;\n    } else {\n      container.interactivity.element = container.canvas.element;\n    }\n\n    const interactivityEl = container.interactivity.element;\n\n    if (interactivityEl && (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n\n      if (!options.interactivity.events.onClick.enable) {\n        EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n      }\n\n      EventListeners.manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n    }\n\n    if (options.interactivity.events.onClick.enable && interactivityEl) {\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n      EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n    }\n\n    if (options.interactivity.events.resize) {\n      EventListeners.manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n    }\n\n    if (document) {\n      EventListeners.manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n    }\n  }\n\n  handleWindowResize() {\n    var _a;\n\n    (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n  }\n\n  handleVisibilityChange() {\n    const container = this.container;\n    const options = container.options;\n    this.mouseTouchFinish();\n\n    if (!options.pauseOnBlur) {\n      return;\n    }\n\n    if (document === null || document === void 0 ? void 0 : document.hidden) {\n      container.pageHidden = true;\n      container.pause();\n    } else {\n      container.pageHidden = false;\n\n      if (container.getAnimationStatus()) {\n        container.play(true);\n      } else {\n        container.draw();\n      }\n    }\n  }\n\n  mouseDown() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity) {\n      const mouse = interactivity.mouse;\n      mouse.clicking = true;\n      mouse.downPosition = mouse.position;\n    }\n  }\n\n  mouseTouchMove(e) {\n    var _a, _b, _c;\n\n    const container = this.container;\n    const options = container.options;\n\n    if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n      return;\n    }\n\n    container.interactivity.mouse.inside = true;\n    let pos;\n    const canvas = container.canvas.element;\n\n    if (e.type.startsWith(\"mouse\")) {\n      this.canPush = true;\n      const mouseEvent = e;\n\n      if (container.interactivity.element === window) {\n        if (canvas) {\n          const clientRect = canvas.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.clientX - clientRect.left,\n            y: mouseEvent.clientY - clientRect.top\n          };\n        }\n      } else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n        const source = mouseEvent.target;\n        const target = mouseEvent.currentTarget;\n\n        if (source && target) {\n          const sourceRect = source.getBoundingClientRect();\n          const targetRect = target.getBoundingClientRect();\n          pos = {\n            x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n            y: mouseEvent.offsetY + sourceRect.top - targetRect.top\n          };\n        } else {\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        }\n      } else {\n        if (mouseEvent.target === container.canvas.element) {\n          pos = {\n            x: mouseEvent.offsetX || mouseEvent.clientX,\n            y: mouseEvent.offsetY || mouseEvent.clientY\n          };\n        }\n      }\n    } else {\n      this.canPush = e.type !== \"touchmove\";\n      const touchEvent = e;\n      const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n      const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n      pos = {\n        x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n        y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0)\n      };\n    }\n\n    const pxRatio = container.retina.pixelRatio;\n\n    if (pos) {\n      pos.x *= pxRatio;\n      pos.y *= pxRatio;\n    }\n\n    container.interactivity.mouse.position = pos;\n    container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n  }\n\n  mouseTouchFinish() {\n    const interactivity = this.container.interactivity;\n\n    if (interactivity === undefined) {\n      return;\n    }\n\n    const mouse = interactivity.mouse;\n    delete mouse.position;\n    delete mouse.clickPosition;\n    delete mouse.downPosition;\n    interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n    mouse.inside = false;\n    mouse.clicking = false;\n  }\n\n  mouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n    const mouse = container.interactivity.mouse;\n    mouse.inside = true;\n    let handled = false;\n    const mousePosition = mouse.position;\n\n    if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n      return;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.clickPositionValid !== undefined) {\n        handled = plugin.clickPositionValid(mousePosition);\n\n        if (handled) {\n          break;\n        }\n      }\n    }\n\n    if (!handled) {\n      this.doMouseTouchClick(e);\n    }\n\n    mouse.clicking = false;\n  }\n\n  doMouseTouchClick(e) {\n    const container = this.container;\n    const options = container.options;\n\n    if (this.canPush) {\n      const mousePos = container.interactivity.mouse.position;\n\n      if (mousePos) {\n        container.interactivity.mouse.clickPosition = {\n          x: mousePos.x,\n          y: mousePos.y\n        };\n      } else {\n        return;\n      }\n\n      container.interactivity.mouse.clickTime = new Date().getTime();\n      const onClick = options.interactivity.events.onClick;\n\n      if (onClick.mode instanceof Array) {\n        for (const mode of onClick.mode) {\n          this.handleClickMode(mode);\n        }\n      } else {\n        this.handleClickMode(onClick.mode);\n      }\n    }\n\n    if (e.type === \"touchend\") {\n      setTimeout(() => this.mouseTouchFinish(), 500);\n    }\n  }\n\n  handleClickMode(mode) {\n    const container = this.container;\n    const options = container.options;\n    const pushNb = options.interactivity.modes.push.quantity;\n    const removeNb = options.interactivity.modes.remove.quantity;\n\n    switch (mode) {\n      case Enums_1.ClickMode.push:\n        {\n          if (pushNb > 0) {\n            if (options.particles.move.enable) {\n              container.particles.push(pushNb, container.interactivity.mouse);\n            } else {\n              if (pushNb === 1) {\n                container.particles.push(pushNb, container.interactivity.mouse);\n              } else if (pushNb > 1) {\n                container.particles.push(pushNb);\n              }\n            }\n          }\n\n          break;\n        }\n\n      case Enums_1.ClickMode.remove:\n        container.particles.removeQuantity(removeNb);\n        break;\n\n      case Enums_1.ClickMode.bubble:\n        container.bubble.clicking = true;\n        break;\n\n      case Enums_1.ClickMode.repulse:\n        container.repulse.clicking = true;\n        container.repulse.count = 0;\n\n        for (const particle of container.repulse.particles) {\n          particle.velocity.horizontal = particle.initialVelocity.horizontal;\n          particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n\n        container.repulse.particles = [];\n        container.repulse.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.repulse.clicking = false;\n          }\n        }, options.interactivity.modes.repulse.duration * 1000);\n        break;\n\n      case Enums_1.ClickMode.attract:\n        container.attract.clicking = true;\n        container.attract.count = 0;\n\n        for (const particle of container.attract.particles) {\n          particle.velocity.horizontal = particle.initialVelocity.horizontal;\n          particle.velocity.vertical = particle.initialVelocity.vertical;\n        }\n\n        container.attract.particles = [];\n        container.attract.finish = false;\n        setTimeout(() => {\n          if (!container.destroyed) {\n            container.attract.clicking = false;\n          }\n        }, options.interactivity.modes.attract.duration * 1000);\n        break;\n\n      case Enums_1.ClickMode.pause:\n        if (container.getAnimationStatus()) {\n          container.pause();\n        } else {\n          container.play();\n        }\n\n        break;\n    }\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n\n}\n\nexports.EventListeners = EventListeners;","map":{"version":3,"sources":["/Users/thoarrow/coder/delete/My-Portforlio-v2/node_modules/tsparticles/dist/Utils/EventListeners.js"],"names":["Object","defineProperty","exports","value","EventListeners","Enums_1","require","Constants_1","constructor","container","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","resizeHandler","handleWindowResize","manageListener","element","event","handler","add","options","addOptions","passive","capture","undefined","addEventListener","removeOptions","removeEventListener","addListeners","manageListeners","removeListeners","detectType","interactivity","detectsOn","mouseLeaveEvent","Constants","InteractivityDetect","window","mouseOutEvent","parent","canvas","parentNode","interactivityEl","events","onHover","enable","onClick","mouseMoveEvent","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent","mouseUpEvent","mouseDownEvent","resize","resizeEvent","document","visibilityChangeEvent","_a","windowResize","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","draw","mouse","clicking","downPosition","position","_b","_c","inside","pos","type","startsWith","mouseEvent","clientRect","getBoundingClientRect","x","clientX","left","y","clientY","top","source","target","currentTarget","sourceRect","targetRect","offsetX","offsetY","touchEvent","lastTouch","touches","length","canvasRect","pxRatio","retina","pixelRatio","status","clickPosition","handled","mousePosition","plugin","plugins","clickPositionValid","doMouseTouchClick","mousePos","clickTime","Date","getTime","mode","Array","handleClickMode","setTimeout","pushNb","modes","push","quantity","removeNb","remove","ClickMode","particles","move","removeQuantity","bubble","repulse","count","particle","velocity","horizontal","initialVelocity","vertical","finish","destroyed","duration","attract"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventListeners = void 0;\nconst Enums_1 = require(\"../Enums\");\nconst Constants_1 = require(\"./Constants\");\nclass EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    static manageListener(element, event, handler, add, options) {\n        if (add) {\n            let addOptions = { passive: true };\n            if (typeof options === \"boolean\") {\n                addOptions.capture = options;\n            }\n            else if (options !== undefined) {\n                addOptions = options;\n            }\n            element.addEventListener(event, handler, addOptions);\n        }\n        else {\n            const removeOptions = options;\n            element.removeEventListener(event, handler, removeOptions);\n        }\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    manageListeners(add) {\n        const container = this.container;\n        const options = container.options;\n        const detectType = options.interactivity.detectsOn;\n        let mouseLeaveEvent = Constants_1.Constants.mouseLeaveEvent;\n        if (detectType === Enums_1.InteractivityDetect.window) {\n            container.interactivity.element = window;\n            mouseLeaveEvent = Constants_1.Constants.mouseOutEvent;\n        }\n        else if (detectType === Enums_1.InteractivityDetect.parent && container.canvas.element) {\n            container.interactivity.element = container.canvas.element.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const interactivityEl = container.interactivity.element;\n        if (interactivityEl &&\n            (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseMoveEvent, this.mouseMoveHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchStartEvent, this.touchStartHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndHandler, add);\n            }\n            EventListeners.manageListener(interactivityEl, mouseLeaveEvent, this.mouseLeaveHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (options.interactivity.events.onClick.enable && interactivityEl) {\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.touchEndEvent, this.touchEndClickHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseUpEvent, this.mouseUpHandler, add);\n            EventListeners.manageListener(interactivityEl, Constants_1.Constants.mouseDownEvent, this.mouseDownHandler, add);\n        }\n        if (options.interactivity.events.resize) {\n            EventListeners.manageListener(window, Constants_1.Constants.resizeEvent, this.resizeHandler, add);\n        }\n        if (document) {\n            EventListeners.manageListener(document, Constants_1.Constants.visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    handleWindowResize() {\n        var _a;\n        (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize();\n    }\n    handleVisibilityChange() {\n        const container = this.container;\n        const options = container.options;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw();\n            }\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c;\n        const container = this.container;\n        const options = container.options;\n        if (((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element) === undefined) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"mouse\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === Enums_1.InteractivityDetect.parent) {\n                const source = mouseEvent.target;\n                const target = mouseEvent.currentTarget;\n                if (source && target) {\n                    const sourceRect = source.getBoundingClientRect();\n                    const targetRect = target.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + sourceRect.left - targetRect.left,\n                        y: mouseEvent.offsetY + sourceRect.top - targetRect.top,\n                    };\n                }\n                else {\n                    pos = {\n                        x: mouseEvent.offsetX || mouseEvent.clientX,\n                        y: mouseEvent.offsetY || mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                if (mouseEvent.target === container.canvas.element) {\n                    pos = {\n                        x: mouseEvent.offsetX || mouseEvent.clientX,\n                        y: mouseEvent.offsetY || mouseEvent.clientY,\n                    };\n                }\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e;\n            const lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n            const canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_b = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _b !== void 0 ? _b : 0),\n                y: lastTouch.clientY - ((_c = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _c !== void 0 ? _c : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = Constants_1.Constants.mouseMoveEvent;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (interactivity === undefined) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = Constants_1.Constants.mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        const mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (mousePosition === undefined || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.clickPositionValid !== undefined) {\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    doMouseTouchClick(e) {\n        const container = this.container;\n        const options = container.options;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (mousePos) {\n                container.interactivity.mouse.clickPosition = {\n                    x: mousePos.x,\n                    y: mousePos.y,\n                };\n            }\n            else {\n                return;\n            }\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            if (onClick.mode instanceof Array) {\n                for (const mode of onClick.mode) {\n                    this.handleClickMode(mode);\n                }\n            }\n            else {\n                this.handleClickMode(onClick.mode);\n            }\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const options = container.options;\n        const pushNb = options.interactivity.modes.push.quantity;\n        const removeNb = options.interactivity.modes.remove.quantity;\n        switch (mode) {\n            case Enums_1.ClickMode.push: {\n                if (pushNb > 0) {\n                    if (options.particles.move.enable) {\n                        container.particles.push(pushNb, container.interactivity.mouse);\n                    }\n                    else {\n                        if (pushNb === 1) {\n                            container.particles.push(pushNb, container.interactivity.mouse);\n                        }\n                        else if (pushNb > 1) {\n                            container.particles.push(pushNb);\n                        }\n                    }\n                }\n                break;\n            }\n            case Enums_1.ClickMode.remove:\n                container.particles.removeQuantity(removeNb);\n                break;\n            case Enums_1.ClickMode.bubble:\n                container.bubble.clicking = true;\n                break;\n            case Enums_1.ClickMode.repulse:\n                container.repulse.clicking = true;\n                container.repulse.count = 0;\n                for (const particle of container.repulse.particles) {\n                    particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                    particle.velocity.vertical = particle.initialVelocity.vertical;\n                }\n                container.repulse.particles = [];\n                container.repulse.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.repulse.clicking = false;\n                    }\n                }, options.interactivity.modes.repulse.duration * 1000);\n                break;\n            case Enums_1.ClickMode.attract:\n                container.attract.clicking = true;\n                container.attract.count = 0;\n                for (const particle of container.attract.particles) {\n                    particle.velocity.horizontal = particle.initialVelocity.horizontal;\n                    particle.velocity.vertical = particle.initialVelocity.vertical;\n                }\n                container.attract.particles = [];\n                container.attract.finish = false;\n                setTimeout(() => {\n                    if (!container.destroyed) {\n                        container.attract.clicking = false;\n                    }\n                }, options.interactivity.modes.attract.duration * 1000);\n                break;\n            case Enums_1.ClickMode.pause:\n                if (container.getAnimationStatus()) {\n                    container.pause();\n                }\n                else {\n                    container.play();\n                }\n                break;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n}\nexports.EventListeners = EventListeners;\n"]},"metadata":{},"sourceType":"script"}